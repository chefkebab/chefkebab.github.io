{"version":3,"sources":["config/constants/types.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/contracts.ts","config/constants/farms.ts","utils/getRpcUrl.ts","utils/web3.ts","utils/addressHelpers.ts","utils/multicall.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/hooks.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/translationsContext.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","config/index.ts","components/layout/Grid.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/Page/Page.tsx","components/Tags.tsx","components/UnlockButton.tsx","views/Farms/components/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/Divider.tsx","views/Farms/Farms.tsx","utils/erc20.ts","components/layout/Page.tsx","components/Label/Label.tsx","utils/callHelpers.ts","hooks/useWeb3.ts","config/constants/index.ts","hooks/useContract.ts","utils/formatBalance.ts","views/Farm/components/Image.tsx","views/Farm/components/Value.tsx","views/Farm/components/Harvest.tsx","hooks/useHarvest.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farm/components/DepositModal.tsx","views/Farm/components/WithdrawModal.tsx","views/Farm/components/Stake.tsx","hooks/useApprove.ts","views/Farm/components/DualFarmDisclaimer.tsx","views/Farm/Farm.tsx","components/layout/Container.tsx","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","components/Card/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","hooks/useTokenBalance.ts","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/NewsCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/Home.tsx","contexts/BlockContext.tsx","hooks/useBlock.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/CardTokenImg.tsx","views/Pools/components/Coming.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","views/Dashboard/Dashboard.tsx","views/NotFound.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx"],"names":["QuoteToken","PoolCategory","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","a","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","cake","97","56","syrup","masterChef","sousChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","btcb","farms","pid","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","BUSD","quoteTokenAdresses","contracts","risk","BTCB","multiplier","BNB","nodes","process","getNodeUrl","randomIndex","random","length","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","getCakeAddress","addresses","chainId","getMasterChefAddress","multicall","calls","web3","multi","MultiCallAbi","itf","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","i","decodeFunctionResult","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAdress","CHAIN_ID","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","info","totalAllocPoint","poolWeight","allocPoint","_hex","toJSON","tokenPriceVsQuote","lpSupply","data","fetchFarmUser","account","farm","find","f","masterChefAdress","lpContractAddress","erc20ABI","allowance","tokenBalance","userInfo","earnings","stakedBalance","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","setFarmUserData","userData","index","findIndex","actions","fetchFarmUserDataAsync","dispatch","pools","sousId","tokenName","stakingTokenName","KEBAB","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","ZERO","useFetchPublicData","useDispatch","blockLimits","totalStakings","liveData","blockLimit","totalStaking","useFarms","useSelector","useFarmFromPid","usePools","stakingTokenBalances","stakingTokenBalance","fetchPoolsUserDataAsync","usePriceBnbBusd","usePriceCakeBusd","usePriceBtcbBusd","GlobalStyle","createGlobalStyle","theme","colors","background","EN","code","language","allLanguages","defaultTranslationState","translations","setTranslations","TranslationsContext","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","localStorage","getItem","storedLang","getStoredLang","axios","get","then","translationApiResponse","catch","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","sessionStorage","lastprice","toNumber","toString","setTimeout","login","logout","currentLang","langs","setLang","priceUp","Number","links","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","Grid","styled","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","StyledMain","Page","CommunityTag","variant","outline","startIcon","Defcon1","Defcon2","Defcon3","Defcon4","Defcon5","UnlockButton","TranslateString","onPresentConnectModal","useWalletModal","onClick","Action","ViewMore","Link","secondary","RainbowLight","keyframes","StyledCardAccent","Multiplier","CardImage","Label","primary","FCard","card","FarmCard","removed","cakePrice","bnbPrice","btcbPrice","farmImage","toLocaleLowerCase","totalValue","useMemo","totalValueFormated","toLocaleString","undefined","maximumFractionDigits","flexDirection","alignItems","src","alt","className","toUpperCase","dual","earnLabel","apy","slice","as","ReactRouterLink","to","style","width","fullWidth","target","FarmTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","size","textSubtle","StyledLink","NavLink","Image","img","Title","Farms","path","farmsLP","activeFarms","inactiveFarms","farmsList","useCallback","farmsToDisplay","kebabPriceUsd","kebabPriceBnb","btcbPriceUsd","cakeRewardPerBlock","kebabRewardPerYear","cakeApy","dualApy","rewardPerBlock","plus","exact","activeClassName","Divider","provider","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","StyledLabel","approve","lpContract","options","ethers","constants","MaxUint256","send","from","stake","enterStaking","on","tx","transactionHash","deposit","sousStake","sousChefContract","sousStakeBnb","unstake","leaveStaking","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","soushHarvest","soushHarvestBnb","useWeb3","ethereum","refEth","useRef","setweb3","current","isCommunity","useContract","setContract","useERC20","useMasterchef","useSousChef","id","rawAbi","BINANCE","sousChefBnb","getBalanceNumber","decimals","displayBalance","dividedBy","getFullDisplayBalance","toFixed","StyledValue","span","Value","fontSize","start","updateStart","end","updateEnd","duration","separator","StyledCardHeader","StyledCardActions","spacing","StyledCardContentInner","Harvest","pendingTx","setPendingTx","onReward","farmPid","txHash","useHarvest","disabled","useStake","onStake","console","SYRUPIDS","useUnstake","onUnstake","StyledSpacer","Spacer","s","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","Children","toArray","child","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","TokenInput","max","symbol","onSelectMax","DepositModal","onConfirm","onDismiss","val","setVal","fullBalance","handleChange","e","currentTarget","handleSelectMax","title","WithdrawModal","StyledActionSpacer","Stake","requestedApproval","setRequestedApproval","onApprove","useApprove","useModal","onPresentDeposit","onPresentWithdraw","handleApprove","error","isAllowed","isGreaterThan","eq","color","StyledDualFarmDisclaimer","BlockNumber","DualFarmDisclaimer","StyledPage","Header","StyledFarm","StyledInfo","h3","Farm","useParams","useFarmFromSymbol","lpAddress","useFarmUser","Container","mediaQueries","sm","lg","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","rawResults","results","fetchBalances","useAllEarnings","balances","setBalance","fetchAllBalances","StyledCardValue","CardValue","useCountUp","countUp","update","updateValue","Text","textDisabled","CakeHarvestBalance","earningsSum","accum","earning","useTokenBalance","fetchBalance","CakeWalletBalance","cakeBalance","StyledFarmStakingCard","Card","CardTitle","Heading","attrs","Block","Actions","FarmedStakingCard","balancesWithValue","balanceType","farmPids","harvestPromises","useAllHarvest","farmWithBalance","harvestAllFarms","StyledCard","NewsCard","sourceType","screenName","tweetLimit","noBorders","noHeader","noFooter","transparent","Row","CakeStats","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useTotalSupply","burnedBalance","useBurnedBalance","cakeSupply","StyledTotalValueLockedCard","TotalValueLockedCard","btcPrice","tvl","total","Math","round","mb","height","Hero","Subtitle","Cards","BaseLayout","Home","FarmStakingCard","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","useBlock","isActive","StyledTokenImg","Balance","ApplyNowLink","primaryBright","DetailPlaceholder","Footer","Coming","padding","role","aria-label","CardTokenImg","flex","StyledText","isDisabled","unit","previousValue","bold","defaultProps","CompoundModal","BalanceRow","ActionLink","OldSyrupTitle","hasBalance","StyledButton","button","StyledExternalLink","Button","buttonSize","buttonPadding","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","BalanceAndCompound","StyledDetails","PoolCard","image","stakingLimit","isBnbPool","stakingTokenContract","useSousApprove","isUsingBnb","useSousStake","isOldSyrup","useSousUnstake","useSousHarvest","KETCH","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","displayedDecimals","onPresentCompound","display","HarvestButton","isNaN","isFinite","Pools","poolsWithApy","stakingTokenFarm","stakingTokenPrice","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","partition","finishedPools","openPools","orderBy","Dashboard","farmsWithBalance","kebabPrice","rows","elem","harvestable","share","balanceBase","balanceQuote","balanceLP","harvestDisp","push","Table","table","Th","th","Td","td","row","StyledNotFound","NotFound","App","window","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","parseInt","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.072e36b9.chunk.js","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'KEBAB' = 'KEBAB',\n  'KETCH' = 'KETCH',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'BTCB' = 'BTCB'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  risk?: number // 1 to 10\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export default {\n  cake: {\n    97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n    56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n  },\n  syrup: {\n    97: '0xc4b0775a405a85544fc1e90f8cec4e0c26252fec',\n    56: '0xF369077bF442Fc9dbfd0Cc80159C3d507e359654',\n  },\n  masterChef: {\n    97: '0x3642f8ab6ab7113e0fab27f5434577ad4788f899',\n    56: '0x76FCeffFcf5325c6156cA89639b17464ea833ECd',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n  },\n  btcb: {\n    56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    97: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c'\n  }\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'KEBAB', \n    lpAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    tokenSymbol: 'KETCH',\n    tokenAddresses: {\n      97: '0xf369077bf442fc9dbfd0cc80159c3d507e359654',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'KEBAB-BTCB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x45d8d5d9bd425efc26e3259848bcfefa16f927f0',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    risk: 5,\n    quoteTokenSymbol: QuoteToken.BTCB,\n    quoteTokenAdresses: contracts.btcb,\n    multiplier: '25X',\n  },\n  {\n    pid: 1,\n    lpSymbol: 'KEBAB-BUSD LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0xd51bee2e0a3886289f6d229b6f30c0c2b34fc0ec',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    risk: 5,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '20X',\n  },\n  {\n    pid: 5,\n    lpSymbol: 'KEBAB-BNB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x25fd42d82d5c238ee7aa277261aa6ca5bdfe5cd4',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    risk: 5,\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    multiplier: '12X',\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    risk: 4,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '5X',\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ETH-BTCB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x7380e10f5c5f9dff4857de3cf9c39bb16f4c6dcf',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    risk: 2,\n    quoteTokenSymbol: QuoteToken.BTCB,\n    quoteTokenAdresses: contracts.btcb,\n    multiplier: '3X',\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '3X',\n    risk: 3\n  },\n  {\n    pid: 13,\n    lpSymbol: 'ETH-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '2X',\n    risk: 4\n  },\n  {\n    pid: 7,\n    lpSymbol: 'DOT-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x54c1ec2f543966953f2f7564692606ea7d5a184e',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '2X',\n    risk: 3\n  },\n  {\n    pid: 11,\n    lpSymbol: 'TWT-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x65f898950e1759d95b5aae15f452e37c5bbe641e',\n    },\n    tokenSymbol: 'TWT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '2X',\n    risk: 3\n  },\n  {\n    pid: 14,\n    lpSymbol: 'DOGE-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1efcb446bfa553a2eb2fff99c9f76962be6ecac3',\n    },\n    tokenSymbol: 'DOGE',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4\n  },\n  {\n    pid: 10,\n    lpSymbol: 'SXP-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x2f82286c2178e9144f2a7b8d27d5b3203253cba4',\n    },\n    tokenSymbol: 'SXP',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4\n  },\n  {\n    pid: 6,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4\n  },\n  {\n    pid: 12,\n    lpSymbol: 'BIFI-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xd3f004e303114423f122c78afded4acfe97675b1',\n    },\n    tokenSymbol: 'BIFI',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4\n  },\n  {\n    pid: 3,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 1\n  },\n  {\n    pid: 8,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 1\n  },\n  {\n    pid: 9,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 1\n  },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   tokenSymbol: 'BTCST',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   tokenSymbol: 'LTC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   tokenSymbol: 'BSCX',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   tokenSymbol: 'TEN',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   tokenSymbol: 'bALBT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   tokenSymbol: 'OG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   tokenSymbol: 'ASR',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   tokenSymbol: 'ATM',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   tokenSymbol: 'REEF',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   tokenSymbol: 'DITTO',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   tokenSymbol: 'JUV',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   tokenSymbol: 'PSG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   tokenSymbol: 'UNFI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   tokenSymbol: 'VAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   tokenSymbol: 'BLK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   tokenSymbol: 'HARD',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   tokenSymbol: 'ADA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   tokenSymbol: 'BAND',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   tokenSymbol: 'DOT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   tokenSymbol: 'EOS',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   tokenSymbol: 'TWT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   tokenSymbol: 'XVS',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 14,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n  //   },\n  //   tokenSymbol: 'ETH',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   tokenSymbol: 'BTC',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   tokenSymbol: 'XRP',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   tokenSymbol: 'ATOM',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   tokenSymbol: 'YFII',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   tokenSymbol: 'XTZ',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   tokenSymbol: 'BCH',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   tokenSymbol: 'YFI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   tokenSymbol: 'UNI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   tokenSymbol: 'INJ',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   tokenSymbol: 'SXP',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   tokenSymbol: 'CTK',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   tokenSymbol: 'STAX',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.1X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   tokenSymbol: 'NAR',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.1X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   tokenSymbol: 'NYA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.1X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   tokenSymbol: 'bROOBEE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.2X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   tokenSymbol: 'BAKE',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   tokenSymbol: 'BURGER',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   tokenSymbol: 'BAKE',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n]\n\nexport default farms\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getSyrupAddress = () => {\n  return addresses.syrup[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const poolWeight = new BigNumber(info.allocPoint._hex).div(new BigNumber(totalAllocPoint))\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        lpSupply: new BigNumber(lpTotalSupply).toJSON()\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarmUser = async (pid: number, account: string) => {\n  const farm = farmsConfig.find((f) => f.pid === pid)\n  const masterChefAdress = getMasterChefAddress()\n  const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n\n  const [allowance, tokenBalance] = await multicall(erc20ABI, [\n    // Allowance\n    {\n      address: lpContractAddress,\n      name: 'allowance',\n      params: [account, masterChefAdress],\n    },\n    // LP token balance on user account\n    {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    },\n  ])\n  const [userInfo, earnings] = await multicall(masterchefABI, [\n    // stakedBalance\n    {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [pid, account],\n    },\n    // earnings\n    {\n      address: masterChefAdress,\n      name: 'pendingCake',\n      params: [pid, account],\n    },\n  ])\n\n  return {\n    allowance: new BigNumber(allowance).toJSON(),\n    tokenBalance: new BigNumber(tokenBalance).toJSON(),\n    stakedBalance: new BigNumber(userInfo[0]._hex).toJSON(),\n    earnings: new BigNumber(earnings).toJSON(),\n  }\n}\n\nexport default fetchFarmUser\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmUser from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { pid, userData } = action.payload\n      const index = state.data.findIndex((f) => f.pid === pid)\n      state.data[index] = { ...state.data[index], userData }\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (pid, account) => async (dispatch) => {\n  const userData = await fetchFarmUser(pid, account)\n  dispatch(setFarmUserData({ pid, userData }))\n}\n\nexport default farmsSlice.reducer\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'KEBAB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '0x3642f8ab6ab7113e0fab27f5434577ad4788f899',\n      56: '0x76FCeffFcf5325c6156cA89639b17464ea833ECd',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'http://kebabfinance.com/',\n    harvest: true,\n    tokenPerBlock: '0.24924924924',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 1,\n    tokenName: 'BTCB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0xcbeA91d99993ACF38F9Aabff1aF961b85224DC07',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.bitcoin.org/',\n    harvest: true,\n    tokenPerBlock: '0.00000011',\n    sortOrder: 2,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 3,\n    tokenName: 'BTCB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0x345e0ca412a8bbf267502146ad4730fbf778d397',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.bitcoin.org/',\n    harvest: true,\n    tokenPerBlock: '0.00000025',\n    sortOrder: 2,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 2,\n    tokenName: 'BNB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0xea79479fcafa0db00c6f83a456cf086425d05340',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.binance.org',\n    harvest: true,\n    tokenPerBlock: '0.00004960',\n    sortOrder: 3,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n]\n\nexport default pools\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchFarmUserDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n} from './actions'\nimport { State, Farm, Pool } from './types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid, account) => {\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  const farm = useFarmFromPid(pid)\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(pid, account))\n    }\n  }, [account, dispatch, pid, fastRefresh])\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // KEBAB-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceBtcbBusd = (): BigNumber => {\n  const pid = 4 // BTCB-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from 'kebabfinance-uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React, { useState, useEffect } from 'react'\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\nimport axios from \"axios\"\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\n// const fileId = 8\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\n// const stringTranslationsApi = new StringTranslations({\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\n// })\n\n\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n// }\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      axios.get(`./lang/${selectedLanguage.code}.json`)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from 'kebabfinance-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from 'kebabfinance-uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://swap.kebabfinance.com/#/swap',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://swap.kebabfinance.com/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farming',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Staking',\n    icon: 'PoolIcon',\n    href: '/syrup',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://info.kebabfinance.com',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://info.kebabfinance.com/#/tokens',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://info.kebabfinance.com/#/pairs',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://info.kebabfinance.com/#/accounts',\n      },\n    ],\n  },\n  // {\n  //   label: 'IFO',\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Governance',\n        href: 'https://gov.kebabfinance.com',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/chefkebab',\n      },\n      {\n        label: 'Blog',\n        href: 'https://kebabfinance1.medium.com',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  if (!sessionStorage.lastprice)\n    sessionStorage.lastprice = cakePriceUsd.toNumber().toString()\n  if (sessionStorage.lastprice !== cakePriceUsd.toNumber().toString()) {\n    setTimeout(() => {\n      sessionStorage.lastprice = cakePriceUsd.toNumber().toString()\n    }, 1500);\n  }\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      priceUp={Number(sessionStorage.lastprice) < cakePriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\nexport const CAKE_POOL_BNB_PID = 5\n","import styled from 'styled-components'\n\n// TODO: Use UI Kit\nconst Grid = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-gap: 16px;\n\n  @media (min-width: 576px) {\n    grid-template-columns: repeat(8, 1fr);\n    grid-gap: 24px;\n  }\n\n  @media (min-width: 852px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 24px;\n  }\n\n  @media (min-width: 968px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 32px;\n  }\n\n  & > div {\n    grid-column: 2 / 8;\n\n    @media (min-width: 576px) {\n      grid-column: span 4;\n    }\n  }\n`\n\nexport default Grid\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Page: React.FC = ({ children }) => <StyledMain>{children}</StyledMain>\n\nconst StyledMain = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - 145px);\n  @media (max-width: 500px) {\n    width: 100vw;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from 'kebabfinance-uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nconst Defcon1 = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<VerifiedIcon />}>\n    Risk 1\n  </Tag>\n)\n\nconst Defcon2 = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Risk 2\n  </Tag>\n)\n\nconst Defcon3 = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Risk 3\n  </Tag>\n)\n\nconst Defcon4 = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Risk 4\n  </Tag>\n)\n\nconst Defcon5 = () => (\n  <Tag variant=\"binance\" outline startIcon={<CommunityIcon />}>\n    Risk 5\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, Defcon1, Defcon2, Defcon3, Defcon4, Defcon5 }\n","import React from 'react'\nimport { Button, useWalletModal } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { Button, Flex } from 'kebabfinance-uikit'\nimport { Farm } from 'state/types'\nimport { usePriceBnbBusd, usePriceCakeBusd, usePriceBtcbBusd } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Defcon1, Defcon2, Defcon3, Defcon4, Defcon5 } from 'components/Tags'\nimport UnlockButton from 'components/UnlockButton'\nimport { QuoteToken } from 'config/constants/types'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst Action = styled.div`\n  padding: 16px 0;\n`\n\nconst ViewMore = styled.div`\n  padding-top: 16px;\n`\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.secondary};\n`\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(0, 0, 255, 1) 0%,\n    rgba(154, 0, 255, 1) 10%,\n    rgba(222, 33, 208, 1) 20%,\n    rgba(220, 74, 79, 1) 30%,\n    rgba(218, 216, 63, 1) 40%,\n    rgba(201, 226, 47, 1) 50%,\n    rgba(127, 238, 28, 1) 60%,\n    rgba(21, 242, 95, 1) 70%,\n    rgba(12, 248, 186, 1) 80%,\n    rgba(7, 217, 251, 1) 90%,\n    rgba(0, 0, 255, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst Multiplier = styled.div`\n  line-height: 25px;\n  padding: 0 8px;\n  background: #25beca;\n  border-radius: 8px;\n  color: ${(props) => props.theme.colors.background};\n  font-weight: 900;\n  margin-bottom: 8px;\n  display: inline-block;\n`\n\nconst CardImage = styled.div`\n  display: flex;\n  justify-content: space-between;\n  text-align: center;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  line-height: 1.5rem;\n  color: ${(props) => props.theme.colors.secondary};\n  > span {\n    float: left;\n  }\n  .right {\n    float: right;\n    color: ${(props) => props.theme.colors.primary};\n    font-weight: 900;\n  }\n`\n\nconst FCard = styled.div`\n  align-self: stretch;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  img {\n    height: 80px;\n    width: 80px;\n  }\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: number\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed }) => {\n  const TranslateString = useI18n()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const btcbPrice = usePriceBtcbBusd()\n  const { account } = useWallet()\n\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return new BigNumber(farm.lpTotalInQuoteToken).div(bnbPrice)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.KEBAB) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n      return btcbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, btcbPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'KEBAB' && <StyledCardAccent />}\n      <CardImage>\n        <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n          <Multiplier>{farm.multiplier}</Multiplier>\n          {farm.risk === 1 ? <Defcon1 /> : ''}\n          {farm.risk === 2 ? <Defcon2 /> : ''}\n          {farm.risk === 3 ? <Defcon3 /> : ''}\n          {farm.risk === 4 ? <Defcon4 /> : ''}\n          {farm.risk === 5 ? <Defcon5 /> : ''}\n        </Flex>\n        <img src={`/images/farms/${farmImage}.png`} alt={farm.tokenSymbol} />\n      </CardImage>\n      <Label>\n        <span>{TranslateString(316, 'Deposit')}</span>\n        <span className=\"right\">{farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')}</span>\n      </Label>\n      <Label>\n        <span>{TranslateString(318, 'Earn')}</span>\n        <span className=\"right\">{farm.dual ? farm.dual.earnLabel : 'KEBAB'}</span>\n      </Label>\n      {!removed && (\n        <Label>\n          <span>{TranslateString(352, 'APY')}</span>\n          <span className=\"right\">\n            {farm.apy\n              ? `${farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)}%`\n              : 'Loading ...'}\n          </span>\n        </Label>\n      )}\n      <Action>\n        {account ? (\n          /* No full width props because of as={ReactRouterLink} */\n          // @ts-ignore\n          <Button as={ReactRouterLink} to={`/farm/${farm.lpSymbol}`} style={{ width: '100%' }}>\n            {TranslateString(568, 'Select')}\n          </Button>\n        ) : (\n          <UnlockButton fullWidth />\n        )}\n      </Action>\n      {!removed && (\n        <Label>\n          <span>{TranslateString(23, 'Total Liquidity')}</span>\n          <span className=\"right\">{totalValueFormated}</span>\n        </Label>\n      )}\n      <ViewMore>\n        <Link href={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`} target=\"_blank\">\n          {TranslateString(356, 'View on BscScan')} &gt;\n        </Link>\n      </ViewMore>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Route, useRouteMatch, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID, CAKE_POOL_BNB_PID } from 'config'\nimport Grid from 'components/layout/Grid'\nimport { useFarms } from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/Page'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      const kebabPriceUsd = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const kebabPriceBnb = new BigNumber(\n        farmsLP.find((farm) => farm.pid === CAKE_POOL_BNB_PID)?.tokenPriceVsQuote || 0,\n      )\n      const btcbPriceUsd = new BigNumber(farmsLP.find((farm) => farm.pid === 4)?.tokenPriceVsQuote || 0)\n\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\n        const kebabRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = kebabPriceUsd.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD) {\n          // all the /BUSD pairs\n          apy = kebabPriceUsd.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n          // all the /BTCB pairs\n          apy = kebabPriceUsd.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken).div(btcbPriceUsd)\n        } else if (farm.quoteTokenSymbol === QuoteToken.KEBAB) {\n          // the syrup pool\n          apy = kebabRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          // KEBAB/BNB\n          apy = kebabPriceBnb.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const cakeApy =\n            farm && kebabPriceUsd.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => <FarmCard key={farm.pid} farm={farm} removed={removed} />)\n    },\n    [farmsLP],\n  )\n\n  return (\n    <Page>\n      <Title>{TranslateString(999, 'Stake LP tokens to earn KEBAB')}</Title>\n      <StyledLink exact activeClassName=\"active\" to=\"/staking\">\n        Staking\n      </StyledLink>\n      <FarmTabButtons />\n      <Page>\n        <Divider />\n        <Route exact path={`${path}`}>\n          <Grid>{farmsList(activeFarms, false)}</Grid>\n        </Route>\n        <Route exact path={`${path}/history`}>\n          <Grid>{farmsList(inactiveFarms, true)}</Grid>\n        </Route>\n      </Page>\n      <Image src=\"/images/cakecat.png\" />\n    </Page>\n  )\n}\n\nconst StyledLink = styled(NavLink)`\n  display: none;\n  @media (max-width: 400px) {\n    display: block;\n    background: #50d7dd;\n    border-radius: 5px;\n    line-height: 40px;\n    font-weight: 900;\n    padding: 0 20px;\n    margin-bottom: 30px;\n    color: #fff;\n  }\n`\n\nconst Image = styled.img`\n  @media (max-width: 500px) {\n    width: 100vw;\n  }\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 29px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 900;\n  margin: 50px;\n`\n\nexport default Farms\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import styled from 'styled-components'\n\n// Header 64px, footer 88px\nconst Page = styled.div`\n  min-height: calc(100vh - 152px);\n`\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import styled from 'styled-components'\n\nconst Image = styled.img`\n  height: 48px;\n  margin-bottom: 16px;\n  width: 48px;\n`\n\nexport default Image\n","import React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\n\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number\n  decimals?: number\n  fontSize?: string | number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals, fontSize = '14px' }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [value])\n\n  return (\n    <StyledValue style={{ fontSize }}>\n      {typeof value === 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n          // eslint-disable-next-line no-nested-ternary\n          decimals={decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3}\n          duration={1}\n          separator=\",\"\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n  font-weight: 900;\n`\n\nexport default Value\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody } from 'kebabfinance-uikit'\nimport Label from 'components/Label'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Image from './Image'\nimport Value from './Value'\n\ninterface HarvestProps {\n  pid: number\n  earnings: BigNumber\n}\n\nconst Harvest: React.FC<HarvestProps> = ({ pid, earnings }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  return (\n    <Card>\n      <CardBody>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Image src=\"/images/tokens/KEBAB.png\" alt=\"kebab\" />\n            <Value value={getBalanceNumber(earnings)} fontSize=\"40px\" />\n            <Label text={TranslateString(330, 'KEBAB Earned')} />\n          </StyledCardHeader>\n          <StyledCardActions>\n            <Button\n              disabled={!earnings.toNumber() || pendingTx}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            >\n              {pendingTx ? 'Collecting KEBAB' : 'Harvest'}\n            </Button>\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardBody>\n    </Card>\n  )\n}\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default Harvest\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(farmPid, account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(pid, account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(pid, account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = []\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'kebabfinance-uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { Button, IconButton, useModal, AddIcon, Card, CardBody } from 'kebabfinance-uikit'\nimport Label from 'components/Label'\nimport { useApprove } from 'hooks/useApprove'\nimport useStake from 'hooks/useStake'\nimport useI18n from 'hooks/useI18n'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport Image from './Image'\nimport Value from './Value'\n\ninterface StakeProps {\n  lpContract: Contract\n  pid: number\n  tokenName: string\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n}\n\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName, allowance, tokenBalance, stakedBalance }) => {\n  const { account } = useWallet()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n\n  const { onApprove } = useApprove(lpContract, pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = tokenName.split(' ')[0].toLocaleLowerCase()\n  const isAllowed = account && allowance && allowance.isGreaterThan(0)\n\n  return (\n    <Card>\n      <CardBody>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Image src={`/images/farms/${farmImage}.png`} alt={`${tokenName} logo`} />\n            <Value\n              value={getBalanceNumber(stakedBalance)}\n              decimals={tokenName === 'HARD' ? 6 : undefined}\n              fontSize=\"40px\"\n            />\n            <Label text={`${tokenName} ${TranslateString(332, 'Tokens Staked')}`} />\n          </StyledCardHeader>\n          <StyledCardActions>\n            {!account && <UnlockButton />}\n            {account &&\n              (isAllowed ? (\n                <>\n                  <Button disabled={stakedBalance.eq(new BigNumber(0))} onClick={onPresentWithdraw}>\n                    {TranslateString(292, 'Unstake')}\n                  </Button>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                </>\n              ) : (\n                <Button disabled={requestedApproval} onClick={handleApprove}>{`Approve ${tokenName}`}</Button>\n              ))}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardBody>\n    </Card>\n  )\n}\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default Stake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract, pid: number) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(pid, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract, pid])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledDualFarmDisclaimer = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n`\nconst BlockNumber = styled.span`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-left: 4px;\n`\n\nconst DualFarmDisclaimer: React.FC<{ tokenName: string; endBlock: number }> = ({ tokenName, endBlock }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledDualFarmDisclaimer>\n      {`${tokenName} `}\n      {TranslateString(518, `will be distributed weekly until block`)}\n      <BlockNumber>{endBlock}</BlockNumber>\n    </StyledDualFarmDisclaimer>\n  )\n}\n\nexport default DualFarmDisclaimer\n","import React, { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport Harvest from './components/Harvest'\nimport Stake from './components/Stake'\nimport DualFarmDisclaimer from './components/DualFarmDisclaimer'\n\nconst Farm: React.FC = () => {\n  const TranslateString = useI18n()\n  const { ethereum, account } = useWallet()\n  const { lpSymbol } = useParams<{ lpSymbol?: string }>()\n\n  const { pid, lpAddresses, tokenSymbol, dual } = useFarmFromSymbol(lpSymbol)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid, account)\n\n  const lpContract = useMemo(() => {\n    return getContract(ethereum as provider, lpAddress)\n  }, [ethereum, lpAddress])\n\n  return (\n    <StyledPage>\n      <Header>\n        {/* <Image src={`/images/tokens/category-${tokenSymbol || 'KEBAB'}.png`} alt={tokenSymbol} /> */}\n        <Title>{TranslateString(999, 'Stake LP tokens to earn KEBAB')}</Title>\n        {dual && <DualFarmDisclaimer tokenName={tokenSymbol} endBlock={dual.endBlock} />}\n      </Header>\n      <StyledFarm>\n        <Grid>\n          <Harvest pid={pid} earnings={earnings} />\n          <Stake\n            lpContract={lpContract}\n            pid={pid}\n            tokenName={lpSymbol.toUpperCase()}\n            allowance={allowance}\n            tokenBalance={tokenBalance}\n            stakedBalance={stakedBalance}\n          />\n        </Grid>\n        {dual ? (\n          <DualFarmDisclaimer tokenName={tokenSymbol} endBlock={dual.endBlock} />\n        ) : (\n          <StyledInfo>\n            {TranslateString(\n              590,\n              '⭐️ Every time you stake and unstake LP tokens, the contract will automagically harvest KEBAB rewards for you!',\n            )}\n          </StyledInfo>\n        )}\n      </StyledFarm>\n    </StyledPage>\n  )\n}\n\nconst StyledPage = styled(Page)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  @media (min-width: 852px) {\n    padding-bottom: 48px;\n    padding-top: 48px;\n  }\n`\n\nconst Header = styled.div`\n  text-align: center;\n`\n\n// const Image = styled.img`\n//   width: 160px;\n//   margin-bottom: 24px;\n// `\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  font-weight: 900;\n  margin-bottom: 24px;\n`\n\nconst StyledFarm = styled.div``\n\nconst Grid = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 24px;\n  grid-template-columns: minmax(auto, 344px);\n  justify-content: center;\n  padding: 32px 0;\n\n  @media (min-width: 852px) {\n    grid-template-columns: repeat(2, minmax(auto, 344px));\n  }\n`\n\nconst StyledInfo = styled.h3`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 16px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`\n\nexport default Farm\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 968px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`\n\nexport default Container\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account }: { account: string } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\n\nimport styled from 'styled-components'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n}\n\nconst StyledCardValue = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-weight: 600;\n`\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px' }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return <StyledCardValue style={{ fontSize }}>{countUp}</StyledCardValue>\n}\n\nexport default CardValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport CardValue from 'components/Card/CardValue'\n\nconst Label = styled(Text)`\n  color: ${({ theme }) => theme.colors.textDisabled};\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n\n  if (!account) {\n    return <Label>{TranslateString(298, 'Locked')}</Label>\n  }\n\n  return <CardValue value={earningsSum} />\n}\n\nexport default CakeHarvestBalance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from 'components/Card/CardValue'\n\nconst Label = styled(Text)`\n  color: ${({ theme }) => theme.colors.textDisabled};\n`\n\nconst CakeWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const { account } = useWallet()\n\n  if (!account) {\n    return <Label>{TranslateString(298, 'Locked')}</Label>\n  }\n\n  return <CardValue value={getBalanceNumber(cakeBalance)} fontSize=\"24px\" />\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/cake-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  background-size: 60%;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 344px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  margin-bottom: 24px;\n`\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Value = styled.div`\n  margin-bottom: 8px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <CardTitle>{TranslateString(542, 'Farms & Staking')}</CardTitle>\n        <CardImage src=\"/images/kebab.svg\" alt=\"kebab logo\" width=\"128\" />\n        <Block>\n          <Value>\n            <CakeHarvestBalance />\n          </Value>\n          <Label>{TranslateString(544, 'KEBAB to Harvest')}</Label>\n        </Block>\n        <Block>\n          <Value>\n            <CakeWalletBalance />\n          </Value>\n          <Label>{TranslateString(546, 'KEBAB in Wallet')}</Label>\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              fullWidth\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting KEBAB')\n                : TranslateString(999, `Harvest all (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton fullWidth />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\nimport { TwitterTimelineEmbed } from 'react-twitter-embed/dist';\nimport useTheme from 'hooks/useTheme'\n\nconst StyledCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-position: top right;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 344px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  margin-bottom: 24px;\n`\n\nconst NewsCard = () => {\n  const { isDark } = useTheme()\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <CardTitle>Latest Chef Tweet</CardTitle>\n        {isDark ? (<TwitterTimelineEmbed\n          sourceType=\"profile\"\n          screenName=\"kebabfinance\"\n          theme=\"dark\"\n          options={{ tweetLimit: '1' }}\n          noBorders\n          noHeader\n          noFooter\n          placeholder=\"Loading Last Chef Tweet\"\n          transparent\n        />) : (<TwitterTimelineEmbed\n          sourceType=\"profile\"\n          screenName=\"kebabfinance\"\n          theme=\"light\"\n          options={{ tweetLimit: '1' }}\n          noBorders\n          noHeader\n          noFooter\n          placeholder=\"Loading Last Chef Tweet\"\n          transparent\n        />)}\n\n        {/* Jan 20: Welcome aboard everyone. KEBAB is now listed and actively trading. We stay at <strong>1 KEBAB / block</strong> by community decision. More farming pairs will be added in the coming weeks: vote on twitter. */}\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default NewsCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from 'kebabfinance-uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from 'components/Card/CardValue'\n\nconst StyledCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-position: top right;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 344px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  margin-bottom: 24px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - getBalanceNumber(burnedBalance) : 0\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <Title>{TranslateString(534, 'KEBAB Stats')}</Title>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total KEBAB Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total KEBAB Burned')}</Text>\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\">{TranslateString(540, 'New KEBAB/block')}</Text>\n          <CardValue fontSize=\"14px\" decimals={0} value={1} />\n        </Row>\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceBtcbBusd } from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\n\nconst StyledTotalValueLockedCard = styled(Card)`\nbackground-repeat: no-repeat;\nbackground-position: top right;\nmargin-left: auto;\nmargin-right: auto;\nmax-width: 344px;\nwidth: 100%;\n\n${({ theme }) => theme.mediaQueries.lg} {\n  margin: 0;\n  max-width: none;\n}\n`\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const btcPrice = usePriceBtcbBusd()\n\n  let tvl = new BigNumber(0)\n  for (let i = 0; i < farmsLP.length; i++) {\n    const farm = farmsLP[i]\n    if (!farm.lpTotalInQuoteToken) {\n      //\n    } else if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      tvl = tvl.plus(new BigNumber(farm.lpTotalInQuoteToken).div(bnbPrice))\n    } else if (farm.quoteTokenSymbol === QuoteToken.KEBAB) {\n      tvl = tvl.plus(cakePrice.times(farm.lpTotalInQuoteToken))\n    } else if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n      tvl = tvl.plus(btcPrice.times(farm.lpTotalInQuoteToken))\n    } else {\n      tvl = tvl.plus(farm.lpTotalInQuoteToken)\n    }\n  }\n  const total = (Math.round(tvl.toNumber() * 100) / 100).toLocaleString()\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        <Heading size=\"lg\" mb=\"24px\">\n          {TranslateString(999, 'Total Vault')}\n        </Heading>\n        {total ? (\n          <>\n            <Heading size=\"xl\">{`$${total}`}</Heading>\n            <Text color=\"textSubtle\">{TranslateString(999, 'Across all farming pairs and stakings')}</Text>\n          </>\n        ) : (\n            <>\n              <Skeleton height={66} />\n            </>\n          )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport FarmStakingCard from './components/FarmStakingCard'\nimport NewsCard from './components/NewsCard'\nimport CakeStats from './components/CakeStats'\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/pan-bg-mobile.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  margin: 32px auto;\n  max-width: 904px;\n  padding-top: 128px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/pan-bg2.svg'), url('/images/pan-bg.svg');\n    background-position: left center, right center;\n    height: 165px;\n    margin-top: 48px;\n    padding-top: 0;\n  }\n`\n\nconst Title = styled(Heading)`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 40px;\n  margin-bottom: ${({ theme }) => theme.spacing[4]}px;\n`\n\nconst Subtitle = styled(Text)`\n  font-weight: 400;\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 48px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Title as=\"h1\">{TranslateString(576, 'Kebab Finance')}</Title>\n          <Subtitle>{TranslateString(578, 'The strategically superior yield farming community on BSC.')}</Subtitle>\n        </div>\n      </Hero>\n      <Container>\n        <Cards>\n          <FarmStakingCard />\n          <NewsCard />\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst StyledTokenImg = styled.img`\n  height: 64px;\n`\n\nexport default StyledTokenImg\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\nimport CardTokenImg from './CardTokenImg'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst ApplyNowLink = styled.a`\n  align-items: center;\n  background-color: transparent;\n  border: 2px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 16px;\n  color: ${({ theme }) => theme.colors.primary};\n  display: flex;\n  font-size: 16px;\n  height: 48px;\n  justify-content: center;\n  margin: 16px 0;\n  text-decoration: none;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.primaryBright};\n    color: ${({ theme }) => theme.colors.primaryBright};\n  }\n`\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <CardTokenImg src=\"/images/bunny-question.svg\" alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <ApplyNowLink\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSc1gPCMYOjWC75bcK-9weaia4egPfCPLvkaINVGpc6IidogLA/viewform\"\n          target=\"_blank\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </ApplyNowLink>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(352, 'APY')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"coming\">\n              🥙{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? KEBAB</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from 'kebabfinance-uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥙{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport CardTokenImg from './CardTokenImg'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.KETCH\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  let displayedDecimals = 3\n  if (tokenName === 'BTCB')\n    displayedDecimals = 8\n  if (tokenName === 'BNB')\n    displayedDecimals = 8\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  // console.log(tokenDecimals, earnings.toNumber())\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <CardTokenImg src={`/images/tokens/${image || tokenName}.png`} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} decimals={displayedDecimals} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(352, 'APY')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥙{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from 'kebabfinance-uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePools } from 'state/hooks'\n// import { QuoteToken, PoolCategory } from 'config/constants/types'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\n// import PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  // const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  // const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n  //   const tokenPriceBN = new BigNumber(tokenPrice)\n  //   if (tokenName === 'BNB') {\n  //     return new BigNumber(1)\n  //   }\n  //   if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n  //     return tokenPriceBN.div(bnbPriceUSD)\n  //   }\n  //   return tokenPriceBN\n  // }\n\n  const poolsWithApy = pools.map((pool) => {\n    // const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    // const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.lpSymbol === 'KEBAB-BUSD LP')\n\n    const stakingTokenPrice = new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    let rewardTokenPrice = stakingTokenPrice\n    if (pool.tokenName === 'BTCB') {\n      rewardTokenPrice = new BigNumber(farms.find((f) => f.tokenSymbol === pool.tokenName).tokenPriceVsQuote)\n    } else if (pool.tokenName === 'BNB') {\n      rewardTokenPrice = new BigNumber(farms.find((f) => f.tokenSymbol === pool.tokenName).tokenPriceVsQuote)\n    }\n    \n    const totalRewardPricePerYear = rewardTokenPrice.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPrice.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    // // /!\\ Assume that the farm quote price is BNB\n    // const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    // const rewardTokenPriceInBNB = priceToBnb(\n    //   pool.tokenName,\n    //   rewardTokenFarm?.tokenPriceVsQuote,\n    //   rewardTokenFarm?.quoteTokenSymbol,\n    // )\n\n    // const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    // const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'Ketchup?')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake KEBAB to earn new tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" />\n      </Hero>\n      {/* <PoolTabButtons /> */}\n      <Divider />\n      <Pools>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </Pools>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nconst Page = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 904px;\n  padding-bottom: 48px;\n  padding-left: 16px;\n  padding-right: 16px;\n  @media (min-width: 576px) {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n  @media (min-width: 968px) {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`\n\nconst Pools = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-gap: 16px;\n  @media (min-width: 576px) {\n    grid-template-columns: repeat(8, 1fr);\n    grid-gap: 24px;\n  }\n  @media (min-width: 852px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 24px;\n  }\n  @media (min-width: 968px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 32px;\n  }\n  & > div {\n    grid-column: 2 / 8;\n    @media (min-width: 576px) {\n      grid-column: span 4;\n    }\n  }\n`\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport { useFarms, usePriceCakeBusd } from 'state/hooks'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport BigNumber from 'bignumber.js'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/pan-bg-mobile.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  margin: 32px auto;\n  max-width: 904px;\n  padding-top: 128px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/pan-bg2.svg'), url('/images/pan-bg.svg');\n    background-position: left center, right center;\n    height: 165px;\n    margin-top: 48px;\n    padding-top: 0;\n  }\n`\n\nconst Title = styled(Heading)`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 40px;\n  margin-bottom: ${({ theme }) => theme.spacing[4]}px;\n`\n\nconst Subtitle = styled(Text)`\n  font-weight: 400;\n`\n\nconst Dashboard: React.FC = () => {\n  const TranslateString = useI18n()\n  const farms = useFarms()\n  const farmsWithBalance = useFarmsWithBalance()\n  const kebabPrice = usePriceCakeBusd()\n\n  const rows = []\n  for (let i = 0; i < farmsWithBalance.length; i++) {\n    const elem = {\n      harvestable: farmsWithBalance[i].balance,\n      tokenSymbol: farmsWithBalance[i].tokenSymbol,\n      quoteTokenSymbol: farmsWithBalance[i].quoteTokenSymbol,\n      lpSymbol: farmsWithBalance[i].lpSymbol,\n      tokenAmount: farms[i].tokenAmount,\n      quoteTokenAmount: farms[i].quoteTokenAmount,\n      tokenPriceVsQuote: farms[i].tokenPriceVsQuote,\n      lpSupply: farms[i].lpSupply,\n      share: null,\n      balanceBase: null,\n      balanceQuote: null,\n      balanceLP: null,\n      tvl: null,\n      harvestDisp: null\n    }\n    if (elem.tokenSymbol !== 'KETCH') {\n      elem.share = elem.harvestable.div(new BigNumber(elem.lpSupply)).toNumber()\n      elem.balanceBase = new BigNumber(elem.tokenAmount).times(elem.share).toNumber()\n      elem.balanceQuote = new BigNumber(elem.quoteTokenAmount).times(elem.share).toNumber()\n      elem.share *= 100\n      elem.harvestDisp = elem.harvestable.toNumber()/(10**18)\n      elem.tvl = elem.balanceQuote*2\n      if (elem.quoteTokenSymbol !== 'BUSD') {\n        elem.tvl = kebabPrice.times(elem.balanceBase*2).toNumber()\n      }\n      rows.push(elem)\n    }\n  }\n\n  const Table = styled.table`\n\n  `\n  const Th = styled.th`\n    border: 1px solid black;\n  `\n\n  const Td = styled.td`\n    border: 1px solid black;\n  `\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Title as=\"h1\">{TranslateString(576, 'BSC Dashboard')}</Title>\n          <Subtitle>{TranslateString(578, 'Available for the Binance Smart Chain only')}</Subtitle>\n        </div>\n      </Hero>\n      <Container>\n        <Table>\n          <thead>\n            <tr>\n              <Th>LP Token</Th>\n              <Th>Avail. Liquidities</Th>\n              <Th>Harvestable KEBABs</Th>\n              <Th>Total Value</Th>\n            </tr>\n          </thead>\n          <tbody>\n          {rows.map((row) => {\n            return ( <tr>\n              <Td>\n                ??? {row.lpSymbol}\n                <br />\n                {row.share}%\n              </Td>\n              <Td>\n                {row.balanceBase} {row.tokenSymbol}\n                <br />\n                {row.balanceQuote} {row.quoteTokenSymbol}\n              </Td>\n              <Td>\n                {row.harvestDisp} KEBAB\n              </Td>\n              <Td>\n                {row.tvl}\n                <br />\n                {row.earning}\n              </Td>\n            </tr>) \n          })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <Td>YYY</Td>\n            </tr>\n          </tfoot>\n        </Table>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Text, LogoIcon } from 'kebabfinance-uikit'\nimport Page from 'components/layout/Page'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 152px);\n  justify-content: center;\n`\n\nconst NotFound = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading size=\"xxl\">404</Heading>\n        <Text mb=\"16px\">{TranslateString(999, 'Oops, page not found.')}</Text>\n        <Button as=\"a\" href=\"/\" size=\"sm\">\n          {TranslateString(999, 'Back Home')}\n        </Button>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NotFound\n","import React, { useEffect } from 'react'\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from 'kebabfinance-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport Farms from './views/Farms'\nimport Farm from './views/Farm'\nimport Home from './views/Home'\nimport Pools from './views/Pools'\nimport Dashboard from './views/Dashboard'\nimport NotFound from './views/NotFound'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/farms\">\n            <Farms />\n          </Route>\n          <Route path=\"/farm/:lpSymbol\">\n            <Farm />\n          </Route>\n          <Route path=\"/pools\">\n            <Pools />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          {/* Redirect */}\n          <Route path=\"/staking\">\n            <Redirect to=\"/pools\" />\n          </Route>\n          <Route path=\"/syrup\">\n            <Redirect to=\"/pools\" />\n          </Route>\n          {/* 404 */}\n          <Route component={NotFound} />\n        </Switch>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from 'kebabfinance-uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}