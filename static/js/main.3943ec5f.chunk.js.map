{"version":3,"sources":["config/constants/types.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/constants/contracts.ts","config/constants/farms.ts","config/constants/pools.ts","utils/getRpcUrl.ts","utils/web3.ts","utils/addressHelpers.ts","utils/multicall.ts","utils/getFarmsList.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/getPoolsList.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/prices/index.ts","state/hooks.ts","components/layout/Page.tsx","components/layout/Container.tsx","contexts/Localisation/translationsContext.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","views/Ifos/components/Hero.tsx","views/Ifos/components/Launch.tsx","views/Ifos/index.tsx","config/index.ts","components/layout/Grid.tsx","views/Farms/components/Hero.tsx","components/Tags.tsx","views/Farms/components/FarmCard.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/Farms.tsx","utils/erc20.ts","utils/callHelpers.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","views/Farm/components/Value.tsx","views/Farm/components/Harvest.tsx","hooks/useHarvest.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farm/components/DepositModal.tsx","views/Farm/components/WithdrawModal.tsx","views/Farm/components/Stake.tsx","hooks/useApprove.ts","views/Farm/components/DualFarmDisclaimer.tsx","views/Farm/Farm.tsx","hooks/useFarmsWithBalance.ts","components/UnlockButton.tsx","hooks/useAllEarnings.ts","components/Card/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","hooks/useTokenBalance.ts","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","views/Home/components/NewsCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TradeCard.tsx","views/Home/components/FarmingCard.tsx","views/Home/components/StakingCard.tsx","views/Home/components/IfoCard.tsx","views/Home/components/UnlockWalletCard.tsx","views/Home/Home.tsx","contexts/BlockContext.tsx","hooks/useBlock.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/CardTokenImg.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Dashboard/components/types.ts","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","components/Slider/Slider.tsx","components/BurnModal.tsx","views/Pools/components/Hero.tsx","views/Pools/Syrup.tsx","views/Dashboard/components/FarmTable/Farm.tsx","views/Dashboard/components/FarmTable/Earned.tsx","views/Dashboard/components/FarmTable/Details.tsx","views/Dashboard/components/FarmTable/LPSupply.tsx","views/Dashboard/components/FarmTable/Tokens.tsx","views/Dashboard/components/FarmTable/MyLP.tsx","views/Dashboard/components/FarmTable/LPPrice.tsx","state/dashboard/index.ts","views/Dashboard/components/FarmTable/MyDollarValue.tsx","views/Dashboard/components/FarmTable/CellLayout.tsx","views/Dashboard/components/FarmTable/Row.tsx","views/Dashboard/components/FarmTable/FarmTable.tsx","views/Dashboard/components/StakingTable/Stake.tsx","views/Dashboard/components/StakingTable/StakeBalance.tsx","views/Dashboard/components/StakingTable/Harvest.tsx","views/Dashboard/components/StakingTable/Price.tsx","views/Dashboard/components/StakingTable/Total.tsx","views/Dashboard/components/StakingTable/CellLayout.tsx","views/Dashboard/components/StakingTable/Row.tsx","views/Dashboard/components/StakingTable/StakingTable.tsx","views/Dashboard/components/GrandTotal.tsx","views/Dashboard/Dashboard.tsx","utils/apy.ts","views/KSLV/components/Hero.tsx","views/KSLV/components/BackedCard.tsx","views/KSLV/components/CompCard.tsx","views/KSLV/components/DefiCard.tsx","views/KSLV/components/FeeCard.tsx","views/KSLV/components/GraphCard.tsx","views/KSLV/components/AccessCard.tsx","views/KSLV/components/SilverCard.tsx","views/KSLV/index.tsx","views/NotFound.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","components/Menu/config.ts","components/Menu/index.tsx","style/Global.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx"],"names":["QuoteToken","PoolCategory","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","a","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","cake","97","56","syrup","masterChef","sousChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","btcb","burnChef","GET_FARMS_LIST_URL","farms","pid","lpSymbol","lpAddresses","tokenSymbol","tokenAddresses","quoteTokenSymbol","BUSD","quoteTokenAdresses","contracts","risk","BTCB","multiplier","BNB","KEBAB","GET_POOLS_LIST_URL","pools","sousId","tokenName","stakingTokenName","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","isActive","tokenDecimals","nodes","process","getNodeUrl","randomIndex","random","length","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","getCakeAddress","addresses","chainId","getMasterChefAddress","multicall","calls","web3","multi","MultiCallAbi","itf","Interface","calldata","map","call","toLowerCase","encodeFunctionData","name","params","methods","aggregate","returnData","res","i","decodeFunctionResult","getFarmsList","data","farmsConfig","fetch","response","json","console","error","fetchFarms","Promise","all","farmConfig","lpAdress","CHAIN_ID","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","info","totalAllocPoint","poolWeight","allocPoint","_hex","toJSON","tokenPriceVsQuote","lpSupply","fetchFarmUser","account","farm","find","f","masterChefAdress","lpContractAddress","erc20ABI","allowance","tokenBalance","userInfo","earnings","stakedBalance","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","setFarmUserData","userData","index","findIndex","actions","fetchFarmUserDataAsync","dispatch","getPoolsList","poolConfig","fetchPoolsBlockLimits","poolsConfig","poolsWithEnd","filter","p","callsStartBlock","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","bnbPools","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","nonMasterPools","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchPrices","createAsyncThunk","update_at","prices","Object","keys","accum","token","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","ZERO","useFetchPublicData","useDispatch","blockLimits","totalStakings","liveData","blockLimit","totalStaking","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","useFarmUser","usePoolsUser","stakingTokenBalances","stakingTokenBalance","fetchPoolsUserDataAsync","usePriceBnbBusd","usePriceCakeBusd","usePriceBtcbBusd","usePriceSilver","kebabPrice","usePriceBusd","symbol","Page","styled","Container","theme","mediaQueries","sm","lg","defaultTranslationState","translations","setTranslations","TranslationsContext","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","StyledCard","Card","StyledCardBody","CardBody","CardTitle","Heading","attrs","size","Blurb","Image","img","md","Hero","TranslateString","src","alt","StyledLaunch","RightText","Title","as","Text","colors","Launch","href","target","rel","Ifos","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","Grid","CardImage","CardDescription","CommunityTag","variant","outline","startIcon","Defcon1","Defcon2","Defcon3","Defcon4","Defcon5","FCard","CardImageItems","Multiplier","props","background","Label","secondary","Action","StyledButton","Button","ViewMore","Link","primary","FarmCard","removed","cakePrice","bnbPrice","btcbPrice","useWallet","connect","reset","onPresentConnectModal","useWalletModal","farmImage","toLocaleLowerCase","totalValue","useMemo","totalValueFormated","Number","toLocaleString","undefined","maximumFractionDigits","className","dual","earnLabel","apy","toNumber","slice","fullWidth","ReactRouterLink","to","style","fontSize","height","borderRadius","onClick","Wrapper","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","StyledGrid","Farms","path","farmsLP","activeFarms","inactiveFarms","farmsList","useCallback","farmsToDisplay","kebabPriceUsd","kebabPriceBnb","btcbPriceUsd","cakeRewardPerBlock","kebabRewardPerYear","cakeApy","dualApy","rewardPerBlock","plus","exact","provider","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","approve","lpContract","options","ethers","constants","MaxUint256","send","from","stake","enterStaking","toString","on","tx","transactionHash","deposit","sousStake","sousChefContract","sousStakeBnb","unstake","leaveStaking","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","soushHarvest","soushHarvestBnb","useWeb3","ethereum","refEth","useRef","setweb3","current","useContract","setContract","useERC20","useMasterchef","useSousChef","id","rawAbi","BINANCE","sousChefBnb","getBalanceNumber","decimals","displayBalance","dividedBy","getFullDisplayBalance","toFixed","getDisplayBalanceUsd","Intl","NumberFormat","currency","format","StyledValue","span","Value","start","updateStart","end","updateEnd","duration","separator","StyledCardContentInner","StyledCardHeader","StyledCardActions","Harvest","pendingTx","setPendingTx","onReward","farmPid","txHash","useHarvest","disabled","useStake","onStake","SYRUPIDS","useUnstake","onUnstake","StyledSpacer","Spacer","s","spacing","ThemeContext","StyledModalActions","StyledModalAction","ModalActions","l","Children","toArray","child","StyledInputWrapper","input","StyledInput","footer","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","TokenInput","max","onSelectMax","ActionWrapper","DepositModal","onConfirm","onDismiss","val","setVal","fullBalance","handleChange","e","currentTarget","handleSelectMax","title","WithdrawModal","StyledActionSpacer","Stake","requestedApproval","setRequestedApproval","onApprove","useApprove","useModal","onPresentDeposit","onPresentWithdraw","handleApprove","isAllowed","isGreaterThan","eq","color","StyledDualFarmDisclaimer","BlockNumber","DualFarmDisclaimer","StyledPage","StyledFarm","StyledInfo","h3","Farm","useParams","lpAddress","toUpperCase","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","rawResults","results","fetchBalances","UnlockButton","endIcon","useAllEarnings","balances","setBalance","fetchAllBalances","StyledCardValue","CardValue","useCountUp","countUp","update","updateValue","textDsc","CakeHarvestBalance","earningsSum","earning","useTokenBalance","fetchBalance","CakeWalletBalance","cakeBalance","StyledFarmStakingCard","cardBackground1","CardBodyBlock","Block","Actions","FarmedStakingCard","balancesWithValue","balanceType","farmPids","harvestPromises","useAllHarvest","farmWithBalance","harvestAllFarms","CACHE_KEY","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","localStorage","getItem","JSON","parse","setIsDark","prevState","setItem","stringify","dark","light","useTheme","StyledThemeCopntext","cardBackground2","NewsCard","sourceType","screenName","tweetLimit","noBorders","noHeader","noFooter","transparent","StyleCardBody","Row","StyledText","StyledIcon","ArrowForwardIcon","card","TotalValue","CakeStats","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useTotalSupply","burnedBalance","useBurnedBalance","cakeSupply","btcPrice","tvl","total","Math","round","fontFamily","StyledTradeCard","TradeCard","width","StyledUnlockWalletCard","UnlockWalletCard","Subtitle","SmallCardsWrapper","MediumCardsWrapper","BigCardsWrapper","Home","FarmingCard","StakingCard","IfoCard","FarmStakingCard","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","useBlock","StyledTokenImg","CardHeader","BalanceAndCompound","Balance","textSubtle","ApplyNowLink","primaryDark","DetailPlaceholder","StyledLabel","Footer","Coming","CardTokenImg","isDisabled","textInactive","unit","previousValue","bold","defaultProps","ViewMode","CompoundModal","BalanceRow","ActionLink","OldSyrupTitle","hasBalance","tags","COMMUNITY","StyledFooter","StyledDetailsButton","button","Details","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ArrowDropUpIcon","ArrowDropDownIcon","Tag","memo","StyledDetails","PoolCard","image","stakingLimit","isBnbPool","stakingTokenContract","useSousApprove","isUsingBnb","useSousStake","isOldSyrup","useSousUnstake","useSousHarvest","KETCH","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","displayedDecimals","onPresentCompound","isNaN","isFinite","PoolTabButtons","CustomSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","rail","mark","opacity","markActive","borderColor","markLabel","fontWeight","textAlign","Slider","SliderWrapper","StyledSlider","RangeSlider","defaultValue","marks","onSelectValue","v","valueLabelDisplay","label","BurnModal","percent","setPercent","parseFloat","floor","handleSelectPercent","parseInt","Pools","Pool","poolsWithApy","stakingTokenFarm","stakingTokenPrice","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","partition","finishedPools","openPools","orderBy","IconImage","rawStakedBalance","mr","Amount","earned","textDisabled","Earned","amountEarned","ArrowIcon","ChevronDownIcon","toggled","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","SupplyWrapper","LPSupply","TokenWrapper","SymbolWrapper","Tokens","MyLP","LPPrice","dashboardSlice","setFarmsTotalData","farmTotal","push","setPoolsTotalData","poolTotal","MyDollarValue","price","displayValue","ContentContainer","CellLayout","CellInner","xl","StyledTr","tr","EarnedMobileCell","td","FarmMobileCell","ValueContainer","ValueWrapper","details","setActionPanelToggled","toggleActionPanel","isXs","liquidity","handleRenderRow","handleSecondRenderRow","dropShadow","TableHeader","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortable","sortColumn","ref","row","original","key","DesktopColumnSchema","StakingPoolColumnSchema","StakeBalance","Price","Total","cells","staking","columnNames","column","columnIndex","indexOf","createElement","StakingTable","ButtonWrapper","GrandTotal","farmsTotal","dashboard","poolsTotal","t","obj","useDashboard","isNumber","preventDefault","window","location","Dashboard","farmList","rowData","quoteTokenPriceUsd","totalLiquidity","cakePriceUsd","poolLiquidityUsd","getFarmApy","lpLabel","stakingPools","sort","b","renderFarmingPool","renderStakingPool","cardBackground3","kslvText","BackedCard","CompCard","DefiCard","FeeCard","uv","ResponsiveContainer","AreaChart","margin","top","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","axisLine","tickLine","tick","stroke","YAxis","type","domain","tickFormatter","number","tickCount","Area","fillOpacity","fill","strokeWidth","connectNulls","AccessCard","SilverCard","silverPriceGram","silverPriceOz","DefiCardWrapper","FeeCardWrapper","KSLV","GraphCard","StyledNotFound","NotFound","mb","EN","code","language","allLanguages","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","axios","get","then","translationApiResponse","catch","langObject","icon","items","Menu","sessionStorage","lastprice","setTimeout","login","logout","currentLang","langs","setLang","priceUp","links","GlobalStyle","createGlobalStyle","App","fetchData","useGetFarmsList","useGetPoolsList","useFetchPriceList","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","pricesReducer","dashboardReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3943ec5f.chunk.js","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'KEBAB' = 'KEBAB',\n  'KETCH' = 'KETCH',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'BTCB' = 'BTCB',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  risk?: number // 1 to 10\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  isActive?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","export default {\n  cake: {\n    97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n    56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n  },\n  syrup: {\n    97: '0xc4b0775a405a85544fc1e90f8cec4e0c26252fec',\n    56: '0xF369077bF442Fc9dbfd0Cc80159C3d507e359654',\n  },\n  masterChef: {\n    97: '0x3642f8ab6ab7113e0fab27f5434577ad4788f899',\n    56: '0x76FCeffFcf5325c6156cA89639b17464ea833ECd',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n  },\n  btcb: {\n    56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    97: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  },\n  burnChef: {\n    56: '',\n    97: '',\n  },\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nexport const GET_FARMS_LIST_URL = 'https://lists.kebabfinance.com/farms-test.json'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'KEBAB',\n    lpAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    tokenSymbol: 'KETCH',\n    tokenAddresses: {\n      97: '0xf369077bf442fc9dbfd0cc80159c3d507e359654',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'KEBAB-BTCB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x45d8d5d9bd425efc26e3259848bcfefa16f927f0',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    risk: 5,\n    quoteTokenSymbol: QuoteToken.BTCB,\n    quoteTokenAdresses: contracts.btcb,\n    multiplier: '25X',\n  },\n  {\n    pid: 1,\n    lpSymbol: 'KEBAB-BUSD LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0xd51bee2e0a3886289f6d229b6f30c0c2b34fc0ec',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    risk: 5,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '20X',\n  },\n  {\n    pid: 5,\n    lpSymbol: 'KEBAB-BNB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x25fd42d82d5c238ee7aa277261aa6ca5bdfe5cd4',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    },\n    risk: 5,\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n    multiplier: '12X',\n  },\n  {\n    pid: 17,\n    lpSymbol: 'KSLV-KEBAB LP',\n    lpAddresses: {\n      97: '0x4cb4610b3a201eec3f272b312dacc2ef2c2cbc10',\n      56: '0x4cb4610b3a201eec3f272b312dacc2ef2c2cbc10',\n    },\n    tokenSymbol: 'KEBAB',\n    tokenAddresses: {\n      97: '0x58b8e295fc5b705bcbb48c5978b2b389332e0414',\n      56: '0x58b8e295fc5b705bcbb48c5978b2b389332e0414',\n    },\n    risk: 2,\n    quoteTokenSymbol: QuoteToken.KEBAB,\n    quoteTokenAdresses: contracts.cake,\n    multiplier: '5X',\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    risk: 4,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '5X',\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ETH-BTCB LP',\n    lpAddresses: {\n      97: '0xe70b7523f4bffa1f2e88d2ba709afd026030f412',\n      56: '0x7380e10f5c5f9dff4857de3cf9c39bb16f4c6dcf',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '0x52a4f96f1df18a48c77e311edfec59b4cdc92a0a',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    risk: 2,\n    quoteTokenSymbol: QuoteToken.BTCB,\n    quoteTokenAdresses: contracts.btcb,\n    multiplier: '3X',\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '3X',\n    risk: 3,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'ETH-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '2X',\n    risk: 4,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'DOT-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x54c1ec2f543966953f2f7564692606ea7d5a184e',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '2X',\n    risk: 3,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'TWT-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x65f898950e1759d95b5aae15f452e37c5bbe641e',\n    },\n    tokenSymbol: 'TWT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '2X',\n    risk: 3,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'DOGE-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1efcb446bfa553a2eb2fff99c9f76962be6ecac3',\n    },\n    tokenSymbol: 'DOGE',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'SXP-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x2f82286c2178e9144f2a7b8d27d5b3203253cba4',\n    },\n    tokenSymbol: 'SXP',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '0X',\n    risk: 4,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'BIFI-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xd3f004e303114423f122c78afded4acfe97675b1',\n    },\n    tokenSymbol: 'BIFI',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 4,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 1,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n    },\n    tokenSymbol: 'DOT',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 1,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n    multiplier: '1X',\n    risk: 1,\n  },\n  // {\n  //   pid: 55,\n  //   lpSymbol: 'BTCST-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n  //   },\n  //   tokenSymbol: 'BTCST',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 54,\n  //   lpSymbol: 'LTC-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n  //   },\n  //   tokenSymbol: 'LTC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 53,\n  //   lpSymbol: 'USDC-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 52,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 51,\n  //   lpSymbol: 'BSCX-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n  //   },\n  //   tokenSymbol: 'BSCX',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 50,\n  //   lpSymbol: 'TEN-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n  //   },\n  //   tokenSymbol: 'TEN',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 49,\n  //   lpSymbol: 'bALBT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n  //   },\n  //   tokenSymbol: 'bALBT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 46,\n  //   lpSymbol: 'OG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n  //   },\n  //   tokenSymbol: 'OG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 47,\n  //   lpSymbol: 'ASR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n  //   },\n  //   tokenSymbol: 'ASR',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 48,\n  //   lpSymbol: 'ATM-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n  //   },\n  //   tokenSymbol: 'ATM',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 45,\n  //   lpSymbol: 'REEF-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n  //   },\n  //   tokenSymbol: 'REEF',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 44,\n  //   lpSymbol: 'Ditto-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n  //   },\n  //   tokenSymbol: 'DITTO',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 43,\n  //   lpSymbol: 'JUV-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n  //   },\n  //   tokenSymbol: 'JUV',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 42,\n  //   lpSymbol: 'PSG-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n  //   },\n  //   tokenSymbol: 'PSG',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 39,\n  //   lpSymbol: 'UNFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n  //   },\n  //   tokenSymbol: 'UNFI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 41,\n  //   lpSymbol: 'VAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n  //   },\n  //   tokenSymbol: 'VAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 40,\n  //   lpSymbol: 'BLK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n  //   },\n  //   tokenSymbol: 'BLK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 37,\n  //   lpSymbol: 'HARD-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n  //   },\n  //   tokenSymbol: 'HARD',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  //   isCommunity: false,\n  // },\n  // {\n  //   pid: 3,\n  //   lpSymbol: 'ADA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n  //   },\n  //   tokenSymbol: 'ADA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 4,\n  //   lpSymbol: 'BAND-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n  //     56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n  //   },\n  //   tokenSymbol: 'BAND',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 5,\n  //   lpSymbol: 'DOT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n  //   },\n  //   tokenSymbol: 'DOT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 6,\n  //   lpSymbol: 'EOS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n  //   },\n  //   tokenSymbol: 'EOS',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 7,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 11,\n  //   lpSymbol: 'USDT-BUSD LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 12,\n  //   lpSymbol: 'TWT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n  //   },\n  //   tokenSymbol: 'TWT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 13,\n  //   lpSymbol: 'XVS-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n  //   },\n  //   tokenSymbol: 'XVS',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 14,\n  //   lpSymbol: 'ETH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n  //   },\n  //   tokenSymbol: 'ETH',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 15,\n  //   lpSymbol: 'BTCB-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n  //   },\n  //   tokenSymbol: 'BTC',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 16,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 17,\n  //   lpSymbol: 'USDT-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n  //   },\n  //   tokenSymbol: 'USDT',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 18,\n  //   lpSymbol: 'XRP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n  //   },\n  //   tokenSymbol: 'XRP',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 19,\n  //   lpSymbol: 'ATOM-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n  //   },\n  //   tokenSymbol: 'ATOM',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 20,\n  //   lpSymbol: 'YFII-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n  //   },\n  //   tokenSymbol: 'YFII',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  // },\n  // {\n  //   pid: 21,\n  //   lpSymbol: 'DAI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 22,\n  //   lpSymbol: 'XTZ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n  //   },\n  //   tokenSymbol: 'XTZ',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  // },\n  // {\n  //   pid: 23,\n  //   lpSymbol: 'BCH-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n  //   },\n  //   tokenSymbol: 'BCH',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0.5X',\n  // },\n  // {\n  //   pid: 24,\n  //   lpSymbol: 'YFI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n  //   },\n  //   tokenSymbol: 'YFI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 25,\n  //   lpSymbol: 'UNI-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n  //   },\n  //   tokenSymbol: 'UNI',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '2X',\n  // },\n  // {\n  //   pid: 26,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 27,\n  //   lpSymbol: 'INJ-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n  //   },\n  //   tokenSymbol: 'INJ',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 29,\n  //   lpSymbol: 'USDC-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n  //   },\n  //   tokenSymbol: 'USDC',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 30,\n  //   lpSymbol: 'SXP-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n  //   },\n  //   tokenSymbol: 'SXP',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 32,\n  //   lpSymbol: 'CTK-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7793870484647a7278907498ec504879d6971EAb',\n  //   },\n  //   tokenSymbol: 'CTK',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '1X',\n  // },\n  // {\n  //   pid: 34,\n  //   lpSymbol: 'STAX-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n  //   },\n  //   tokenSymbol: 'STAX',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.1X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 35,\n  //   lpSymbol: 'NAR-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n  //   },\n  //   tokenSymbol: 'NAR',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.1X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 36,\n  //   lpSymbol: 'NYA-CAKE LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x2730bf486d658838464a4ef077880998d944252d',\n  //   },\n  //   tokenSymbol: 'NYA',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.1X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 38,\n  //   lpSymbol: 'bROOBEE-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n  //   },\n  //   tokenSymbol: 'bROOBEE',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE,\n  //   quoteTokenAdresses: contracts.cake,\n  //   multiplier: '0.2X',\n  //   isCommunity: true,\n  // },\n  // {\n  //   pid: 8,\n  //   lpSymbol: 'BAKE-BNB Bakery LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n  //   },\n  //   tokenSymbol: 'BAKE',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 9,\n  //   lpSymbol: 'BURGER-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n  //   },\n  //   tokenSymbol: 'BURGER',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n  // {\n  //   pid: 10,\n  //   lpSymbol: 'BAKE-BNB LP',\n  //   lpAddresses: {\n  //     97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n  //     56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n  //   },\n  //   tokenSymbol: 'BAKE',\n  //   tokenAddresses: {\n  //     97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //     56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  //   multiplier: '0X',\n  // },\n]\n\nexport default farms\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nexport const GET_POOLS_LIST_URL = 'https://lists.kebabfinance.com/pools-test.json'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'KEBAB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '0x3642f8ab6ab7113e0fab27f5434577ad4788f899',\n      56: '0x76FCeffFcf5325c6156cA89639b17464ea833ECd',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'http://kebabfinance.com/',\n    harvest: true,\n    tokenPerBlock: '0.24924924924',\n    sortOrder: 1,\n    isFinished: false,\n    isActive: true,\n    tokenDecimals: 18,\n  },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'BTCB',\n  //   stakingTokenName: QuoteToken.KEBAB,\n  //   stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xcbeA91d99993ACF38F9Aabff1aF961b85224DC07',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.bitcoin.org/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00000011',\n  //   sortOrder: 2,\n  //   isFinished: false,\n  //   isActive: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 3,\n  //   tokenName: 'BTCB',\n  //   stakingTokenName: QuoteToken.KEBAB,\n  //   stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x345e0ca412a8bbf267502146ad4730fbf778d397',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.bitcoin.org/',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00000025',\n  //   sortOrder: 2,\n  //   isFinished: true,\n  //   isActive: false,\n  //   tokenDecimals: 18,\n  // },\n  {\n    sousId: 5,\n    tokenName: 'BTCB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0x3cE0B242b365aa2299434525bcbDbd1e49b1675b',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.bitcoin.org/',\n    harvest: true,\n    tokenPerBlock: '0.00000035',\n    sortOrder: 2,\n    isFinished: false,\n    isActive: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 7,\n    tokenName: 'BTCB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0x3979613F4946D86Fca4BCA889eD084f59a56A49d',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.bitcoin.org/',\n    harvest: true,\n    tokenPerBlock: '0.00000030',\n    sortOrder: 2,\n    isFinished: false,\n    isActive: true,\n    tokenDecimals: 18,\n  },\n  // {\n  //   sousId: 2,\n  //   tokenName: 'BNB',\n  //   stakingTokenName: QuoteToken.KEBAB,\n  //   stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0xea79479fcafa0db00c6f83a456cf086425d05340',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.binance.org',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00004960',\n  //   sortOrder: 3,\n  //   isFinished: true,\n  //   isActive: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 4,\n  //   tokenName: 'BNB',\n  //   stakingTokenName: QuoteToken.KEBAB,\n  //   stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n  //   contractAddress: {\n  //     97: '',\n  //     56: '0x931A250b93249F58373dd3D9834Cda3684eE7dAF',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://www.binance.org',\n  //   harvest: true,\n  //   tokenPerBlock: '0.00003470',\n  //   sortOrder: 3,\n  //   isFinished: true,\n  //   isActive: false,\n  //   tokenDecimals: 18,\n  // },\n  {\n    sousId: 6,\n    tokenName: 'BNB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0x1cdeA426b79aE0df4fe454D44eB3B3a968E8dd1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.binance.org',\n    harvest: true,\n    tokenPerBlock: '0.00002480',\n    sortOrder: 3,\n    isFinished: false,\n    isActive: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 8,\n    tokenName: 'BNB',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0xfDe0C0F8De7563cBcf74357204b446eF325EAa60',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.binance.org',\n    harvest: true,\n    tokenPerBlock: '0.00002470',\n    sortOrder: 3,\n    isFinished: false,\n    isActive: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 9,\n    tokenName: 'NAUT',\n    stakingTokenName: QuoteToken.KEBAB,\n    stakingTokenAddress: '0x7979F6C54ebA05E18Ded44C4F986F49a5De551c2',\n    contractAddress: {\n      97: '',\n      56: '0x21cda390673aa780a029ab785728a2b01c0dc8c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://astronaut.to',\n    harvest: true,\n    tokenPerBlock: '0.00099206',\n    sortOrder: 3,\n    isFinished: false,\n    isActive: true,\n    tokenDecimals: 8,\n  }\n]\n\nexport default pools\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getSyrupAddress = () => {\n  return addresses.syrup[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getBurnAddress = () => {\n  return addresses.burnChef[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import farmsConfig, { GET_FARMS_LIST_URL } from 'config/constants/farms'\n\nconst getFarmsList = async () => {\n  let data = farmsConfig\n  try {\n    const response = await fetch(GET_FARMS_LIST_URL)\n    data = await response.json()\n\n    return data\n  } catch (error) {\n    console.error('Unable to fetch farms list:', error)\n    return data\n  }\n}\n\nexport default getFarmsList\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport getFarmsList from 'utils/getFarmsList'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const farmsConfig = await getFarmsList()\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const poolWeight = new BigNumber(info.allocPoint._hex).div(new BigNumber(totalAllocPoint))\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        lpSupply: new BigNumber(lpTotalSupply).toJSON(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport getFarmsList from 'utils/getFarmsList'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarmUser = async (pid: number, account: string) => {\n  const farmsConfig = await getFarmsList()\n  const farm = farmsConfig.find((f) => f.pid === pid)\n  const masterChefAdress = getMasterChefAddress()\n  const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n\n  const [allowance, tokenBalance] = await multicall(erc20ABI, [\n    // Allowance\n    {\n      address: lpContractAddress,\n      name: 'allowance',\n      params: [account, masterChefAdress],\n    },\n    // LP token balance on user account\n    {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    },\n  ])\n  const [userInfo, earnings] = await multicall(masterchefABI, [\n    // stakedBalance\n    {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [pid, account],\n    },\n    // earnings\n    {\n      address: masterChefAdress,\n      name: 'pendingCake',\n      params: [pid, account],\n    },\n  ])\n\n  return {\n    allowance: new BigNumber(allowance).toJSON(),\n    tokenBalance: new BigNumber(tokenBalance).toJSON(),\n    stakedBalance: new BigNumber(userInfo[0]._hex).toJSON(),\n    earnings: new BigNumber(earnings).toJSON(),\n  }\n}\n\nexport default fetchFarmUser\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmUser from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { pid, userData } = action.payload\n      const index = state.data.findIndex((f) => f.pid === pid)\n      state.data[index] = { ...state.data[index], userData }\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (pid, account) => async (dispatch) => {\n  const userData = await fetchFarmUser(pid, account)\n  dispatch(setFarmUserData({ pid, userData }))\n}\n\nexport default farmsSlice.reducer\n","import poolConfig, { GET_POOLS_LIST_URL } from 'config/constants/pools'\n\nconst getPoolsList = async () => {\n  let data = poolConfig\n  try {\n    const response = await fetch(GET_POOLS_LIST_URL)\n    data = await response.json()\n\n    return data\n  } catch (error) {\n    console.error('Unable to fetch farms list:', error)\n    return data\n  }\n}\n\nexport default getPoolsList\n","import sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport getPoolsList from 'utils/getPoolsList'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsConfig = await getPoolsList()\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const poolsConfig = await getPoolsList()\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport getPoolsList from 'utils/getPoolsList'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\n\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const poolsConfig = await getPoolsList()\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  const poolsConfig = await getPoolsList()\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const poolsConfig = await getPoolsList()\n  const nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const poolsConfig = await getPoolsList()\n  const nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport getPoolsList from 'utils/getPoolsList'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const pools = await getPoolsList()\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = pools.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const pools = await getPoolsList()\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = pools.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { FarmConfig, PoolConfig } from 'config/constants/types'\nimport { GET_FARMS_LIST_URL } from 'config/constants/farms'\nimport { GET_POOLS_LIST_URL } from 'config/constants/pools'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchFarmUserDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n} from './actions'\nimport { setFarmsPublicData } from './farms'\nimport { setPoolsPublicData } from './pools'\nimport { State, Farm, Pool, PriceState } from './types'\nimport { fetchPrices } from './prices'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid, account) => {\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  const farm = useFarmFromPid(pid)\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(pid, account))\n    }\n  }, [account, dispatch, pid, fastRefresh])\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\nexport const useGetFarmsList = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(GET_FARMS_LIST_URL)\n        const data: FarmConfig[] = await response.json()\n\n        dispatch(setFarmsPublicData(data))\n      } catch (error) {\n        console.error('Unable to fetch farms list:', error)\n      }\n    }\n\n    fetchData()\n  }, [dispatch])\n}\n\n// Pools\nexport const usePools = (): Pool[] => {\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolsUser = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\nexport const useGetPoolsList = () => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(GET_POOLS_LIST_URL)\n        const data: PoolConfig[] = await response.json()\n\n        dispatch(setPoolsPublicData(data))\n      } catch (error) {\n        console.error('Unable to fetch pools list:', error)\n      }\n    }\n\n    fetchData()\n  }, [dispatch])\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // KEBAB-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceBtcbBusd = (): BigNumber => {\n  const pid = 4 // BTCB-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceSilver = (): BigNumber => {\n  const pid = 17 // KSLV-KEBAB LP\n  const farm = useFarmFromPid(pid)\n  const kebabPrice = usePriceCakeBusd()\n  if (!farm || !farm.tokenPriceVsQuote)\n    return ZERO\n  const price = new BigNumber(farm.tokenPriceVsQuote).times(kebabPrice)\n  return price\n}\n\nexport const usePriceBusd = (symbol: string): BigNumber => {\n  const farm = useFarmFromSymbol(symbol)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useDashboard = () => {\n  const farmsTotal = useSelector((state: State) => state.dashboard.farms)\n  const poolsTotal = useSelector((state: State) => state.dashboard.pools)\n  const total = farmsTotal.reduce((t, obj) => obj.value + t, 0) + poolsTotal.reduce((t, obj) => obj.value + t, 0)\n\n  return total\n}\n","import styled from 'styled-components'\n\n// Header 64px, footer 88px\nconst Page = styled.div`\n  min-height: calc(100vh - 152px);\n`\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 789px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 805px;\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    max-width: 821px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`\n\nexport default Container\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 214px;\n  background-color: #404040;\n  overflow: visible;\n  margin-top: 60px;\n  margin-bottom: 35px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-between;\n    margin-top: 110px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding-left: 61px;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  color: white;\n`\nconst Blurb = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: white;\n  margin-top: 16px;\n`\nconst Image = styled.img`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n    width: 258px;\n    height: 291px;\n    margin-top: -40px;\n    margin-right: 33px;\n  }\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>{TranslateString(500, 'IFO: Initial Farm Offerings')}</CardTitle>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </StyledCardBody>\n      <Image src=\"/images/ifos/ifo-kebab.png\" alt=\"ifo kebab\" />\n    </StyledCard>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Button } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledLaunch = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 71px;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\nconst Image = styled.img`\n  width: 324px;\n  height: 393px;\n`\nconst RightText = styled.div`\n  text-align: center;\n  padding-top: 50px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    text-align: right;\n    padding-left: 50px;\n  }\n`\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: #e46149;\n  font-size: 32px;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 82px;\n  }\n`\nconst Blurb = styled(Text)`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 19px;\n  margin-bottom: 30px;\n`\n\nconst Launch = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledLaunch>\n      <Image src=\"/images/ifos/ifo-launch.png\" alt=\"ifo launch\" />\n      <RightText>\n        <Title>{TranslateString(500, 'Want to launch your own IFO?')}</Title>\n        <Blurb>\n          {TranslateString(\n            502,\n            'Launch your project with KebapSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n          )}\n        </Blurb>\n        <Button\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/1uerVBpniyl60iaPy-NFWcJ7fZsZ8kIvqPxaiaZt_BJM/edit\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {TranslateString(516, 'Apply to Launch')}\n        </Button>\n      </RightText>\n    </StyledLaunch>\n  )\n}\n\nexport default Launch\n","import React from 'react'\n\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport Hero from './components/Hero'\nimport Launch from './components/Launch'\n\nconst Ifos = () => {\n  return (\n    <Page>\n      <Container>\n        <Hero />\n        <Launch />\n      </Container>\n    </Page>\n  )\n}\n\nexport default Ifos\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\nexport const CAKE_POOL_BNB_PID = 5\n","import styled from 'styled-components'\n\n// TODO: Use UI Kit\nconst Grid = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-gap: 16px;\n\n  @media (min-width: 576px) {\n    grid-template-columns: repeat(8, 1fr);\n    grid-gap: 24px;\n  }\n\n  @media (min-width: 852px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 24px;\n  }\n\n  @media (min-width: 968px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 32px;\n  }\n\n  & > div {\n    grid-column: 2 / 8;\n\n    @media (min-width: 576px) {\n      grid-column: span 4;\n    }\n  }\n`\n\nexport default Grid\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n// import useI18n from 'hooks/useI18n'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 214px;\n  background-color: #11a373;\n  overflow: visible;\n  margin-top: 60px;\n  margin-bottom: 35px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-between;\n    margin-top: 110px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding-left: 61px;\n`\nconst CardImage = styled.img`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n    width: 292px;\n    height: 295px;\n    margin-top: -40px;\n    margin-right: 18px;\n  }\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  color: white;\n`\nconst CardDescription = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: white;\n  margin-top: 16px;\n`\n\nconst Hero = () => {\n  // const TranslateString = useI18n()\n\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Farming</CardTitle>\n        <CardDescription>Stake LP tokens to earn KEBAB</CardDescription>\n      </StyledCardBody>\n      <CardImage src=\"/images/farms/farmer.png\" alt=\"farmer img\" />\n    </StyledCard>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, VerifyInfoIcon } from 'kebabfinance-uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"info\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nconst Defcon1 = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifyInfoIcon />}>\n    Risk 1\n  </Tag>\n)\n\nconst Defcon2 = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifyInfoIcon />}>\n    Risk 2\n  </Tag>\n)\n\nconst Defcon3 = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifyInfoIcon />}>\n    Risk 3\n  </Tag>\n)\n\nconst Defcon4 = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifyInfoIcon />}>\n    Risk 4\n  </Tag>\n)\n\nconst Defcon5 = () => (\n  <Tag variant=\"primary\" outline startIcon={<VerifyInfoIcon />}>\n    Risk 5\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, Defcon1, Defcon2, Defcon3, Defcon4, Defcon5, DualTag }\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components' // keyframes,\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport { Button, Card, CardBody, Heading, useWalletModal } from 'kebabfinance-uikit'\nimport { Farm } from 'state/types'\nimport { usePriceBnbBusd, usePriceCakeBusd, usePriceBtcbBusd } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Defcon1, Defcon2, Defcon3, Defcon4, Defcon5 } from 'components/Tags'\nimport { QuoteToken } from 'config/constants/types'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n  liquidity?: BigNumber\n}\n\nconst FCard = styled(Card)`\n  display: flex;\n  text-align: center;\n  img {\n    height: 80px;\n    width: 80px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  width: 100%;\n  padding: 32px 30px;\n`\nconst CardTitle = styled(Heading)`\n  font-weight: 700;\n  text-align: right;\n  margin-bottom: 16px;\n`\nconst CardImage = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`\nconst CardImageItems = styled.div``\nconst Multiplier = styled.div`\n  width: 48px;\n  height: 36px;\n  background: #f7931a;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 700;\n  color: ${(props) => props.theme.colors.background};\n  border-radius: 30px;\n  margin-left: auto;\n  margin-bottom: 8px;\n`\nconst Label = styled.div`\n  width: 100%;\n  height: 1.4rem;\n  color: ${(props) => props.theme.colors.secondary};\n  > span {\n    font-size: 14px;\n    float: left;\n    font-family: GilroySemiBold;\n  }\n  .right {\n    float: right;\n    color: ${(props) => props.theme.colors.text};\n    font-weight: 700;\n  }\n`\nconst Action = styled.div`\n  margin-top: 8px;\n  margin-bottom: 16px;\n`\nconst StyledButton = styled(Button)`\n  border-radius: 6px;\n  font-size: 14px;\n`\nconst ViewMore = styled.div`\n  margin-top: 8px;\n`\nconst Link = styled.a`\n  text-decoration: none;\n  font-family: GilroySemiBold;\n  font-size: 14px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\n// const RainbowLight = keyframes`\n// \t0% {\n// \t\tbackground-position: 0% 50%;\n// \t}\n// \t50% {\n// \t\tbackground-position: 100% 50%;\n// \t}\n// \t100% {\n// \t\tbackground-position: 0% 50%;\n// \t}\n// `\n// const StyledCardAccent = styled.div`\n//   background: linear-gradient(\n//     45deg,\n//     rgba(0, 0, 255, 1) 0%,\n//     rgba(154, 0, 255, 1) 10%,\n//     rgba(222, 33, 208, 1) 20%,\n//     rgba(220, 74, 79, 1) 30%,\n//     rgba(218, 216, 63, 1) 40%,\n//     rgba(201, 226, 47, 1) 50%,\n//     rgba(127, 238, 28, 1) 60%,\n//     rgba(21, 242, 95, 1) 70%,\n//     rgba(12, 248, 186, 1) 80%,\n//     rgba(7, 217, 251, 1) 90%,\n//     rgba(0, 0, 255, 1) 100%\n//   );\n//   background-size: 300% 300%;\n//   animation: ${RainbowLight} 2s linear infinite;\n//   border-radius: 19px;\n//   filter: blur(6px);\n//   position: absolute;\n//   top: -2px;\n//   right: -2px;\n//   bottom: -2px;\n//   left: -2px;\n//   z-index: -1;\n// `\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: number\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed }) => {\n  const TranslateString = useI18n()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const btcbPrice = usePriceBtcbBusd()\n  const { account, connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return new BigNumber(farm.lpTotalInQuoteToken).div(bnbPrice)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.KEBAB) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n      return btcbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, btcbPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  return (\n    <FCard>\n      {/* {farm.tokenSymbol === 'KEBAB' && <StyledCardAccent />} */}\n      <StyledCardBody>\n        <CardTitle>{farm.lpSymbol}</CardTitle>\n        <CardImage>\n          <img src={`/images/farms/${farmImage}.png`} alt={farm.tokenSymbol} />\n          <CardImageItems>\n            <Multiplier>{farm.multiplier}</Multiplier>\n            {farm.risk === 1 && <Defcon1 />}\n            {farm.risk === 2 && <Defcon2 />}\n            {farm.risk === 3 && <Defcon3 />}\n            {farm.risk === 4 && <Defcon4 />}\n            {farm.risk === 5 && <Defcon5 />}\n          </CardImageItems>\n        </CardImage>\n        <Label>\n          <span>{TranslateString(318, 'Earn')}</span>\n          <span className=\"right\">{farm.dual ? farm.dual.earnLabel : 'KEBAB'}</span>\n        </Label>\n        {!removed && (\n          <Label>\n            <span>{TranslateString(352, 'APY')}</span>\n            <span className=\"right\">\n              {farm.apy\n                ? `${farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)}%`\n                : 'Loading ...'}\n            </span>\n          </Label>\n        )}\n        <Action>\n          {account ? (\n            /* No full width props because of as={ReactRouterLink} */\n            // @ts-ignore\n            <Button\n              fullWidth\n              as={ReactRouterLink}\n              to={`/farm/${farm.lpSymbol}`}\n              style={{ fontSize: 14, height: 36, borderRadius: 6 }}\n            >\n              {TranslateString(568, 'Select')}\n            </Button>\n          ) : (\n            <StyledButton fullWidth onClick={onPresentConnectModal}>\n              {TranslateString(292, 'Unlock Wallet')}\n            </StyledButton>\n          )}\n        </Action>\n        {!removed && (\n          <Label>\n            <span>{TranslateString(23, 'Total Liquidity')}</span>\n            <span className=\"right\">{totalValueFormated}</span>\n          </Label>\n        )}\n        <ViewMore>\n          <Link\n            href={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n            target=\"_blank\"\n          >\n            {TranslateString(356, 'View on BscScan')} &gt;\n          </Link>\n        </ViewMore>\n      </StyledCardBody>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 35px;\n`\n\nconst FarmTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n","import React, { useCallback } from 'react'\nimport {\n  Route,\n  useRouteMatch,\n  // NavLink\n} from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID, CAKE_POOL_BNB_PID } from 'config'\nimport Grid from 'components/layout/Grid'\nimport { useFarms } from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\n// import useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport Hero from './components/Hero'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\n\n// const StyledLink = styled(NavLink)`\n//   display: none;\n//   @media (max-width: 400px) {\n//     display: block;\n//     background: #50d7dd;\n//     border-radius: 5px;\n//     line-height: 40px;\n//     font-weight: 900;\n//     padding: 0 20px;\n//     margin-bottom: 30px;\n//     color: #fff;\n//   }\n// `\nconst StyledGrid = styled(Grid)`\n  grid-gap: 20px;\n  margin-bottom: 100px;\n\n  @media (max-width: 576px) {\n    grid-template-columns: repeat(8, 1fr);\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  // const TranslateString = useI18n()\n  const farmsLP = useFarms()\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      const kebabPriceUsd = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const kebabPriceBnb = new BigNumber(\n        farmsLP.find((farm) => farm.pid === CAKE_POOL_BNB_PID)?.tokenPriceVsQuote || 0,\n      )\n      const btcbPriceUsd = new BigNumber(farmsLP.find((farm) => farm.pid === 4)?.tokenPriceVsQuote || 0)\n\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\n        const kebabRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = kebabPriceUsd.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD) {\n          // all the /BUSD pairs\n          apy = kebabPriceUsd.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n          // all the /BTCB pairs\n          apy = kebabPriceUsd.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken).div(btcbPriceUsd)\n        } else if (farm.quoteTokenSymbol === QuoteToken.KEBAB) {\n          apy = kebabRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          // KEBAB/BNB\n          apy = kebabPriceBnb.times(kebabRewardPerYear).div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const cakeApy =\n            farm && kebabPriceUsd.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => <FarmCard key={farm.pid} farm={farm} removed={removed} />)\n    },\n    [farmsLP],\n  )\n\n  return (\n    <Page>\n      <Container>\n        <Hero />\n        {/* <StyledLink exact activeClassName=\"active\" to=\"/pools\">\n          Staking\n        </StyledLink> */}\n        <FarmTabButtons />\n        <StyledGrid>\n          <Route exact path={`${path}`}>\n            {farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </StyledGrid>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Farms\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport { usePools } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getBurnAddress,\n} from 'utils/addressHelpers'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport burnChef from 'config/abi/burnChef.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const poolsConfig = usePools()\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport const useBurnChef = () => {\n  const abi = (burnChef as unknown) as AbiItem\n  return useContract(abi, getBurnAddress())\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getDisplayBalanceUsd = (balance: BigNumber) => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  })\n  return formatter.format(balance.toNumber())\n}\n","import React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\n\nimport styled from 'styled-components'\n\ninterface ValueProps {\n  value: string | number\n  decimals?: number\n  fontSize?: string | number\n}\n\nconst Value: React.FC<ValueProps> = ({ value, decimals, fontSize = '14px' }) => {\n  const [start, updateStart] = useState(0)\n  const [end, updateEnd] = useState(0)\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end)\n      updateEnd(value)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [value])\n\n  return (\n    <StyledValue style={{ fontSize }}>\n      {typeof value === 'string' ? (\n        value\n      ) : (\n        <CountUp\n          start={start}\n          end={end}\n          // eslint-disable-next-line no-nested-ternary\n          decimals={decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3}\n          duration={1}\n          separator=\",\"\n        />\n      )}\n    </StyledValue>\n  )\n}\n\nconst StyledValue = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n  font-weight: 900;\n`\n\nexport default Value\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody } from 'kebabfinance-uikit'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Value from './Value'\n\ninterface HarvestProps {\n  pid: number\n  earnings: BigNumber\n}\n\nconst StyledCardContentInner = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`\nconst StyledCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`\nconst Image = styled.img`\n  width: 76px;\n  height: 76px;\n  margin-top: 14px;\n  margin-bottom: 27px;\n`\nconst Label = styled.div`\n  font-family: GilroySemiBold;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 16px;\n  margin-top: 8px;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100 %;\n  margin-top: 38px;\n  margin-bottom: 14px;\n`\n\nconst Harvest: React.FC<HarvestProps> = ({ pid, earnings }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  return (\n    <Card>\n      <CardBody>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Image src=\"/images/tokens/KEBAB.png\" alt=\"kebab\" />\n            <Value value={getBalanceNumber(earnings)} fontSize=\"32px\" />\n            <Label>{TranslateString(330, 'KEBAB earned')}</Label>\n          </StyledCardHeader>\n          <StyledCardActions>\n            <Button\n              disabled={!earnings.toNumber() || pendingTx}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            >\n              {pendingTx ? 'Collecting KEBAB' : 'Harvest'}\n            </Button>\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Harvest\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(farmPid, account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(pid, account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(pid, account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = []\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: 19px;\n  height: 48px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.footer};\n  font-size: 16px;\n  font-weight: 700;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n\n  &::placeholder {\n    color: ${(props) => props.theme.colors.footer};\n  }\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'kebabfinance-uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 700;\n  color: ${(props) => props.theme.colors.primary};\n  margin-bottom: 16px;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.footer};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 45px 0px 45px;\n`\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ActionWrapper>\n        <ModalActions>\n          <Button variant=\"secondary\" fullWidth onClick={onDismiss}>\n            {TranslateString(462, 'Cancel')}\n          </Button>\n          <Button\n            fullWidth\n            disabled={pendingTx}\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              setPendingTx(false)\n              onDismiss()\n            }}\n          >\n            {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n          </Button>\n        </ModalActions>\n      </ActionWrapper>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 45px 0px 45px;\n`\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ActionWrapper>\n        <ModalActions>\n          <Button variant=\"secondary\" fullWidth onClick={onDismiss}>\n            {TranslateString(462, 'Cancel')}\n          </Button>\n          <Button\n            fullWidth\n            disabled={pendingTx}\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              setPendingTx(false)\n              onDismiss()\n            }}\n          >\n            {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n          </Button>\n        </ModalActions>\n      </ActionWrapper>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { Button, IconButton, useModal, AddIcon, Card, CardBody, useWalletModal } from 'kebabfinance-uikit'\nimport { useApprove } from 'hooks/useApprove'\nimport useStake from 'hooks/useStake'\nimport useI18n from 'hooks/useI18n'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport Value from './Value'\n\ninterface StakeProps {\n  lpContract: Contract\n  pid: number\n  tokenName: string\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n}\n\nconst StyledCardContentInner = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`\nconst StyledCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`\nconst Image = styled.img`\n  width: 76px;\n  height: 76px;\n  margin-top: 14px;\n  margin-bottom: 27px;\n`\nconst Label = styled.div`\n  font-family: GilroySemiBold;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 16px;\n  margin-top: 8px;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-top: 38px;\n  margin-bottom: 14px;\n`\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName, allowance, tokenBalance, stakedBalance }) => {\n  const { account, connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n\n  const { onApprove } = useApprove(lpContract, pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const [onPresentDeposit] = useModal(<DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = tokenName.split(' ')[0].toLocaleLowerCase()\n  const isAllowed = account && allowance && allowance.isGreaterThan(0)\n\n  return (\n    <Card>\n      <CardBody>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Image src={`/images/farms/${farmImage}.png`} alt={`${tokenName} logo`} />\n            <Value\n              value={getBalanceNumber(stakedBalance)}\n              decimals={tokenName === 'HARD' ? 6 : undefined}\n              fontSize=\"32px\"\n            />\n            <Label>{`${tokenName} ${TranslateString(332, 'Tokens Staked')}`}</Label>\n          </StyledCardHeader>\n          <StyledCardActions>\n            {!account && <Button onClick={onPresentConnectModal}>{TranslateString(292, 'Unlock Wallet')}</Button>}\n            {account &&\n              (isAllowed ? (\n                <>\n                  <Button disabled={stakedBalance.eq(new BigNumber(0))} onClick={onPresentWithdraw}>\n                    {TranslateString(292, 'Unstake')}\n                  </Button>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                </>\n              ) : (\n                <Button disabled={requestedApproval} onClick={handleApprove}>{`Approve ${tokenName}`}</Button>\n              ))}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Stake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract, pid: number) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(pid, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract, pid])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledDualFarmDisclaimer = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n`\nconst BlockNumber = styled.span`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-left: 4px;\n`\n\nconst DualFarmDisclaimer: React.FC<{ tokenName: string; endBlock: number }> = ({ tokenName, endBlock }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledDualFarmDisclaimer>\n      {`${tokenName} `}\n      {TranslateString(518, `will be distributed weekly until block`)}\n      <BlockNumber>{endBlock}</BlockNumber>\n    </StyledDualFarmDisclaimer>\n  )\n}\n\nexport default DualFarmDisclaimer\n","import React, { useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport Harvest from './components/Harvest'\nimport Stake from './components/Stake'\nimport DualFarmDisclaimer from './components/DualFarmDisclaimer'\nimport Hero from '../Farms/components/Hero'\n\nconst StyledPage = styled(Page)`\n  padding-bottom: 24px;\n\n  @media (min-width: 852px) {\n    padding-bottom: 48px;\n  }\n`\nconst StyledFarm = styled.div``\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 48px;\n  grid-template-columns: minmax(auto, 358px);\n  align-items: start;\n  justify-content: center;\n  padding: 38px 0;\n\n  @media (min-width: 852px) {\n    grid-template-columns: repeat(2, minmax(auto, 358px));\n  }\n`\nconst StyledInfo = styled.h3`\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 16px;\n  font-weight: 700;\n  margin: 0;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 80px;\n  }\n`\nconst Farm: React.FC = () => {\n  const TranslateString = useI18n()\n  const { ethereum, account } = useWallet()\n  const { lpSymbol } = useParams<{ lpSymbol?: string }>()\n\n  const { pid, lpAddresses, tokenSymbol, dual } = useFarmFromSymbol(lpSymbol)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid, account)\n\n  const lpContract = useMemo(() => {\n    return getContract(ethereum as provider, lpAddress)\n  }, [ethereum, lpAddress])\n\n  return (\n    <StyledPage>\n      <Container>\n        {/* <Image src={`/images/tokens/category-${tokenSymbol || 'KEBAB'}.png`} alt={tokenSymbol} /> */}\n        <Hero />\n        {dual && <DualFarmDisclaimer tokenName={tokenSymbol} endBlock={dual.endBlock} />}\n        <StyledFarm>\n          <Grid>\n            <Harvest pid={pid} earnings={earnings} />\n            <Stake\n              lpContract={lpContract}\n              pid={pid}\n              tokenName={lpSymbol.toUpperCase()}\n              allowance={allowance}\n              tokenBalance={tokenBalance}\n              stakedBalance={stakedBalance}\n            />\n          </Grid>\n          {dual ? (\n            <DualFarmDisclaimer tokenName={tokenSymbol} endBlock={dual.endBlock} />\n          ) : (\n            <StyledInfo>\n              {TranslateString(\n                590,\n                '⭐ Every time you stake and unstake LP tokens, the contract will automagically harvest KEBAB rewards for you!',\n              )}\n            </StyledInfo>\n          )}\n        </StyledFarm>\n      </Container>\n    </StyledPage>\n  )\n}\n\nexport default Farm\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { useFarms } from 'state/hooks'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  const farmsConfig = useFarms()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh, farmsConfig])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import React from 'react'\nimport { Button, useWalletModal, ArrowForwardIcon } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button\n      {...props}\n      variant=\"tertiary\"\n      endIcon={<ArrowForwardIcon color=\"currentColor\" />}\n      onClick={onPresentConnectModal}\n    >\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { useFarms } from 'state/hooks'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account }: { account: string } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  const farmsConfig = useFarms()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh, farmsConfig])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\n\nimport styled from 'styled-components'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  color?: string\n}\n\nconst StyledCardValue = styled.div<{ color: string }>`\n  font-weight: 700;\n  color: ${({ color }) => color};\n`\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', color = 'white' }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <StyledCardValue style={{ fontSize }} color={color}>\n      {countUp}\n    </StyledCardValue>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport CardValue from 'components/Card/CardValue'\n\nconst Label = styled(Text)`\n  font-family: 'GilroySemiBold';\n  color: ${({ theme }) => theme.colors.textDsc};\n  font-size: 16px;\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n\n  if (!account) {\n    return <Label>{TranslateString(298, 'Locked')}</Label>\n  }\n\n  return <CardValue value={earningsSum} fontSize=\"32px\" />\n}\n\nexport default CakeHarvestBalance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, '0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport CardValue from 'components/Card/CardValue'\n\nconst Label = styled(Text)`\n  font-family: 'GilroySemiBold';\n  color: ${({ theme }) => theme.colors.textDsc};\n  font-size: 16px;\n`\n\nconst CakeWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const { account } = useWallet()\n\n  if (!account) {\n    return <Label>{TranslateString(298, 'Locked')}</Label>\n  }\n\n  return <CardValue value={getBalanceNumber(cakeBalance)} fontSize=\"32px\" />\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.cardBackground1};\n  box-shadow: none;\n  width: 100%;\n  height: 439px;\n  margin: auto;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 358px;\n  }\n`\nconst CardBodyBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 32px;\n  font-weight: 700;\n  color: white;\n  margin-top: 14px;\n`\nconst Image = styled.img`\n  width: 83px;\n  height: 138px;\n  margin-top: 14px;\n`\nconst Block = styled.div<{ account?: string | null }>`\n  display: flex;\n  flex-direction: ${(props) => (!props.account ? 'column' : 'column-reverse')};\n  margin-bottom: 16px;\n`\nconst Label = styled.div<{ account?: string | null }>`\n  font-family: 'GilroySemiBold';\n  font-size: ${(props) => (!props.account ? '20px' : '16px')};\n  color: ${({ account, theme }) => (!account ? 'white' : theme.colors.textDsc)};\n  margin-bottom: 12px;\n`\nconst Value = styled.div`\n  margin-bottom: 12px;\n`\nconst Actions = styled.div`\n  position: absolute;\n  bottom: 24px;\n  width: calc(100% - 48px);\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <CardBodyBlock>\n          <CardTitle>{TranslateString(542, 'Farms & Staking')}</CardTitle>\n          <Image src=\"/images/kebab_logo.svg\" alt=\"kebab logo\" />\n        </CardBodyBlock>\n        <Block account={account}>\n          <Label account={account}>{TranslateString(544, 'KEBAB to Harvest')}</Label>\n          <Value>\n            <CakeHarvestBalance />\n          </Value>\n        </Block>\n        <Block account={account}>\n          <Label account={account}>{TranslateString(546, 'KEBAB in Wallet')}</Label>\n          <Value>\n            <CakeWalletBalance />\n          </Value>\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              variant=\"tertiary\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              fullWidth\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting KEBAB')\n                : TranslateString(999, `Harvest All (${balancesWithValue.length})`)}\n            </Button>\n          ) : (\n            <UnlockButton fullWidth />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from 'kebabfinance-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\nimport { TwitterTimelineEmbed } from 'react-twitter-embed/dist'\nimport useTheme from 'hooks/useTheme'\n\nconst StyledCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.cardBackground2};\n  box-shadow: none;\n  width: 100%;\n  height: 439px;\n  margin: auto;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 358px;\n  }\n`\nconst CardBodyBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 32px;\n  font-weight: 700;\n  color: #1da1f2;\n  margin-top: 14px;\n`\nconst Image = styled.img`\n  width: 96px;\n  height: 78px;\n`\n\nconst NewsCard = () => {\n  const { isDark } = useTheme()\n\n  return (\n    <StyledCard>\n      <CardBody>\n        <CardBodyBlock>\n          <CardTitle>Latest Chef Tweet</CardTitle>\n          <Image src=\"/images/tweeter.svg\" alt=\"tweeter\" />\n        </CardBodyBlock>\n        {isDark ? (\n          <TwitterTimelineEmbed\n            sourceType=\"profile\"\n            screenName=\"kebabfinance\"\n            theme=\"dark\"\n            options={{ tweetLimit: '1' }}\n            noBorders\n            noHeader\n            noFooter\n            placeholder=\"Loading Last Chef Tweet\"\n            transparent\n          />\n        ) : (\n          <TwitterTimelineEmbed\n            sourceType=\"profile\"\n            screenName=\"kebabfinance\"\n            theme=\"light\"\n            options={{ tweetLimit: '1' }}\n            noBorders\n            noHeader\n            noFooter\n            placeholder=\"Loading Last Chef Tweet\"\n            transparent\n          />\n        )}\n\n        {/* Jan 20: Welcome aboard everyone. KEBAB is now listed and actively trading. We stay at <strong>1 KEBAB / block</strong> by community decision. More farming pairs will be added in the coming weeks: vote on twitter. */}\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default NewsCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text, Skeleton, ArrowForwardIcon } from 'kebabfinance-uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceBtcbBusd } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from 'components/Card/CardValue'\nimport { QuoteToken } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\n\nconst StyledCard = styled(Card)`\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: flex;\n  }\n`\nconst StyleCardBody = styled(CardBody)`\n  margin-top: 14px;\n  margin-left: 7px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 50%;\n  }\n`\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n`\nconst Title = styled(Heading)`\n  font-family: 'GilroyMedium';\n  font-size: 32px;\n  font-weight: 700;\n  margin-bottom: 32px;\n`\nconst StyledText = styled(Text)`\n  font-family: 'GilroySemiBold';\n  display: flex;\n  align-items: center;\n`\nconst StyledIcon = styled(ArrowForwardIcon)`\n  background-color: #e46149;\n  border-radius: 50px;\n  fill: ${({ theme }) => theme.colors.card};\n  margin-right: 13px;\n`\nconst TotalValue = styled(Heading)`\n  font-weight: 700;\n  font-size: 24px;\n  margin-bottom: 24px;\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - getBalanceNumber(burnedBalance) : 0\n\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const btcPrice = usePriceBtcbBusd()\n\n  let tvl = new BigNumber(0)\n  for (let i = 0; i < farmsLP.length; i++) {\n    const farm = farmsLP[i]\n    if (!farm.lpTotalInQuoteToken) {\n      //\n    } else if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      tvl = tvl.plus(new BigNumber(farm.lpTotalInQuoteToken).div(bnbPrice))\n    } else if (farm.quoteTokenSymbol === QuoteToken.KEBAB) {\n      tvl = tvl.plus(cakePrice.times(farm.lpTotalInQuoteToken))\n    } else if (farm.quoteTokenSymbol === QuoteToken.BTCB) {\n      tvl = tvl.plus(btcPrice.times(farm.lpTotalInQuoteToken))\n    } else {\n      tvl = tvl.plus(farm.lpTotalInQuoteToken)\n    }\n  }\n  const total = (Math.round(tvl.toNumber() * 100) / 100).toLocaleString()\n\n  return (\n    <StyledCard>\n      <StyleCardBody>\n        <Title>{TranslateString(534, 'Kebab Stats')}</Title>\n        <Row>\n          <StyledText>\n            <StyledIcon />\n            {TranslateString(536, 'Total KEBAB Supply')}\n          </StyledText>\n          {cakeSupply && <CardValue fontSize=\"16px\" value={cakeSupply} color=\"#E46149\" />}\n        </Row>\n        <Row>\n          <StyledText>\n            <StyledIcon />\n            {TranslateString(538, 'Total KEBAB Burned')}\n          </StyledText>\n          <CardValue fontSize=\"16px\" value={getBalanceNumber(burnedBalance)} color=\"#E46149\" />\n        </Row>\n        <Row>\n          <StyledText>\n            <StyledIcon />\n            {TranslateString(540, 'New KEBAB/block')}\n          </StyledText>\n          <CardValue fontSize=\"16px\" decimals={0} value={1} color=\"#E46149\" />\n        </Row>\n      </StyleCardBody>\n      <StyleCardBody>\n        <Title>{TranslateString(999, 'Total Vault')}</Title>\n        {total ? (\n          <>\n            <TotalValue>{`$${total}`}</TotalValue>\n            <Text color=\"primary\" style={{ fontFamily: 'GilroySemiBold' }}>\n              {TranslateString(999, 'Across all farming pairs and stakings')}\n            </Text>\n          </>\n        ) : (\n          <>\n            <Skeleton height={66} />\n          </>\n        )}\n      </StyleCardBody>\n    </StyledCard>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n// import useI18n from 'hooks/useI18n'\n\nconst StyledTradeCard = styled(Card)`\n  background-color: #197bbd;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 178px;\n  height: 214px;\n  width: 100%;\n  cursor: pointer;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 28px;\n  font-weight: 700;\n  color: white;\n  margin-top: 14px;\n  margin-left: 7px;\n`\nconst CardImage = styled.img`\n  position: absolute;\n  bottom: -6px;\n  right: -8px;\n`\n\nconst TradeCard = () => {\n  // const TranslateString = useI18n()\n\n  return (\n    <a href=\"https://swap.kebabfinance.com/#/swap\" style={{ width: '100%' }}>\n      <StyledTradeCard>\n        <CardBody>\n          <CardTitle>Trade</CardTitle>\n          <CardImage src=\"/images/trade_bg.svg\" alt=\"trade btn\" />\n        </CardBody>\n      </StyledTradeCard>\n    </a>\n  )\n}\n\nexport default TradeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n// import useI18n from 'hooks/useI18n'\n\nconst StyledTradeCard = styled(Card)`\n  background-color: #11a373;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 178px;\n  height: 214px;\n  width: 100%;\n  cursor: pointer;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 28px;\n  font-weight: 700;\n  color: white;\n  margin-top: 14px;\n  margin-left: 7px;\n`\nconst CardImage = styled.img`\n  position: absolute;\n  bottom: -5px;\n  right: -25px;\n`\n\nconst TradeCard = () => {\n  // const TranslateString = useI18n()\n\n  return (\n    <a href=\"/#/farms\" style={{ width: '100%' }}>\n      <StyledTradeCard>\n        <CardBody>\n          <CardTitle>Farming</CardTitle>\n          <CardImage src=\"/images/farming_bg.svg\" alt=\"farming btn\" />\n        </CardBody>\n      </StyledTradeCard>\n    </a>\n  )\n}\n\nexport default TradeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n// import useI18n from 'hooks/useI18n'\n\nconst StyledTradeCard = styled(Card)`\n  background-color: #f7931a;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 178px;\n  height: 214px;\n  width: 100%;\n  cursor: pointer;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 28px;\n  font-weight: 700;\n  color: white;\n  margin-top: 14px;\n  margin-left: 7px;\n`\nconst CardImage = styled.img`\n  position: absolute;\n  bottom: -12px;\n  right: -3px;\n`\n\nconst TradeCard = () => {\n  // const TranslateString = useI18n()\n\n  return (\n    <a href=\"/#/pools\" style={{ width: '100%' }}>\n      <StyledTradeCard>\n        <CardBody>\n          <CardTitle>Staking</CardTitle>\n          <CardImage src=\"/images/staking_bg.svg\" alt=\"staking btn\" />\n        </CardBody>\n      </StyledTradeCard>\n    </a>\n  )\n}\n\nexport default TradeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n// import useI18n from 'hooks/useI18n'\n\nconst StyledTradeCard = styled(Card)`\n  background-color: #404040;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 178px;\n  height: 214px;\n  width: 100%;\n  cursor: pointer;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 28px;\n  font-weight: 700;\n  color: white;\n  margin-top: 14px;\n  margin-left: 7px;\n`\nconst CardImage = styled.img`\n  position: absolute;\n  bottom: -3px;\n  right: -7px;\n`\n\nconst TradeCard = () => {\n  // const TranslateString = useI18n()\n\n  return (\n    <a href=\"/#/ifo\" style={{ width: '100%' }}>\n      <StyledTradeCard>\n        <CardBody>\n          <CardTitle>IFO</CardTitle>\n          <CardImage src=\"/images/ifo_bg.png\" alt=\"ifo btn\" />\n        </CardBody>\n      </StyledTradeCard>\n    </a>\n  )\n}\n\nexport default TradeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, ArrowForwardIcon, useWalletModal } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n// import useI18n from 'hooks/useI18n'\n\nconst StyledUnlockWalletCard = styled(Card)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 214px;\n  background-color: #ffc145;\n  overflow: visible;\n  margin-bottom: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-between;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  text-align: right;\n  padding: 39px 39px 39px 0px;\n`\nconst CardImage = styled.img`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n    width: 295px;\n    height: 246px;\n    margin-left: 16px;\n  }\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  color: ${({ theme }) => theme.colors.background};\n  margin-top: 10px;\n`\nconst CardDescription = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: ${({ theme }) => theme.colors.background};\n  margin-top: 10px;\n`\nconst StyledButton = styled(Button)`\n  border: 2px solid ${({ theme }) => theme.colors.background};\n  border-radius: 30px;\n  color: ${({ theme }) => theme.colors.background};\n`\n\nconst UnlockWalletCard = () => {\n  // const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <StyledUnlockWalletCard>\n      <CardImage src=\"/images/wallet.png\" alt=\"wallet img\" />\n      <StyledCardBody>\n        <StyledButton\n          variant=\"secondary\"\n          endIcon={<ArrowForwardIcon color=\"currentColor\" />}\n          onClick={onPresentConnectModal}\n        >\n          Unlock Wallet\n        </StyledButton>\n        <CardTitle>Unlock Wallet</CardTitle>\n        <CardDescription>There is a text about unlock wallet</CardDescription>\n      </StyledCardBody>\n    </StyledUnlockWalletCard>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport FarmStakingCard from './components/FarmStakingCard'\nimport NewsCard from './components/NewsCard'\nimport CakeStats from './components/CakeStats'\nimport TradeCard from './components/TradeCard'\nimport FarmingCard from './components/FarmingCard'\nimport StakingCard from './components/StakingCard'\nimport IfoCard from './components/IfoCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\n\nconst Hero = styled.div`\n  background-image: url('/images/pan-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: contain;\n  align-items: center;\n  margin: 32px auto;\n  max-width: 738px;\n  padding-top: 160px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 300px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 396px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    height: 396px;\n    margin-top: 48px;\n    padding-top: 0;\n  }\n`\nconst Title = styled(Heading)`\n  font-family: 'GilroyMedium';\n  font-size: 64px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: ${({ theme }) => theme.spacing[3]}px;\n  text-align: center;\n`\nconst Subtitle = styled(Text)`\n  font-family: 'GilroySemiBold';\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n  margin-bottom: 48px;\n`\nconst SmallCardsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 16px;\n  margin-bottom: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`\nconst MediumCardsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 16px;\n  margin-bottom: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`\nconst BigCardsWrapper = styled.div`\n  margin-bottom: 80px;\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n\n  return (\n    <Page>\n      <Hero />\n      <Title as=\"h1\">{TranslateString(576, 'Kebab Finance')}</Title>\n      <Subtitle>{TranslateString(578, 'The strategically superior yield farming community on BSC.')}</Subtitle>\n      <Container>\n        <SmallCardsWrapper>\n          <TradeCard />\n          <FarmingCard />\n          <StakingCard />\n          <IfoCard />\n        </SmallCardsWrapper>\n        <MediumCardsWrapper>\n          <FarmStakingCard />\n          <NewsCard />\n        </MediumCardsWrapper>\n        <BigCardsWrapper>\n          {!account && <UnlockWalletCard />}\n          <CakeStats />\n        </BigCardsWrapper>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\nimport { Card } from 'kebabfinance-uikit'\n\nconst StyledCard = styled(Card)<{ isActive?: boolean; isFinished?: boolean }>`\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  img {\n    width: 76px;\n    height: 76px;\n  }\n`\n\nexport default StyledCard\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textInactive' : 'text']};\n  font-weight: 700;\n  font-size: 28px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst StyledTokenImg = styled.img`\n  height: 64px;\n`\n\nexport default StyledTokenImg\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody } from 'kebabfinance-uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\nimport CardTokenImg from './CardTokenImg'\n\nconst StyledCardBody = styled(CardBody)`\n  width: 100%;\n  padding: 38px 31px 16px 31px;\n`\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 32px;\n  font-weight: 700;\n`\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-family: GilroySemiBold;\n  font-size: 16px;\n`\nconst ApplyNowLink = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 19px;\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 16px;\n  font-weight: 700;\n  height: 48px;\n  margin: 16px 0;\n  text-decoration: none;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.primaryDark};\n    color: ${({ theme }) => theme.colors.primaryDark};\n  }\n`\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst StyledLabel = styled.div`\n  font-size: 16px;\n  font-family: GilroySemiBold;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.5;\n`\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  margin-top: 16px;\n  margin-left: -31px;\n  margin-right: -31px;\n  padding-top: 16px;\n  padding-left: 31px;\n  padding-right: 31px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <StyledCardBody>\n        <CardHeader>\n          <CardTitle>{TranslateString(414, 'Your Project?')} 👀</CardTitle>\n        </CardHeader>\n        <CardTokenImg src=\"/images/bunny-question.svg\" alt=\"Your project here\" />\n        <BalanceAndCompound>\n          <Balance>???</Balance>\n        </BalanceAndCompound>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <ApplyNowLink\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSc1gPCMYOjWC75bcK-9weaia4egPfCPLvkaINVGpc6IidogLA/viewform\"\n          target=\"_blank\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </ApplyNowLink>\n        <DetailPlaceholder>\n          <StyledLabel>{TranslateString(352, 'APY')}:</StyledLabel>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <StyledLabel>🥙 {TranslateString(384, 'Your Stake')}:</StyledLabel>\n          <Value>??? KEBAB</Value>\n        </DetailPlaceholder>\n        <Footer>\n          <CommunityTag />\n        </Footer>\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textInactive' : 'primary']};\n  font-family: GilroySemiBold;\n  font-size: 16px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from 'kebabfinance-uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textInactive : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APY: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const StakingPoolColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'staking',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'stake',\n    translationId: 1072,\n    sortable: true,\n    label: 'Stake',\n  },\n  {\n    id: 3,\n    name: 'harvest',\n    translationId: 736,\n    sortable: true,\n    label: 'Pending Harvest',\n  },\n  {\n    id: 4,\n    name: 'price',\n    translationId: 999,\n    sortable: true,\n    label: 'Dollar Price',\n  },\n  {\n    id: 5,\n    name: 'total',\n    translationId: 999,\n    sortable: true,\n    label: 'Total Value',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 45px 0px 45px;\n`\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ActionWrapper>\n        <ModalActions>\n          <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n            {TranslateString(462, 'Cancel')}\n          </Button>\n          <Button\n            fullWidth\n            disabled={pendingTx}\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              setPendingTx(false)\n              onDismiss()\n            }}\n          >\n            {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n          </Button>\n        </ModalActions>\n      </ActionWrapper>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 45px 0px 45px;\n`\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ActionWrapper>\n        <ModalActions>\n          <Button variant=\"secondary\" fullWidth onClick={onDismiss}>\n            {TranslateString(462, 'Cancel')}\n          </Button>\n          <Button\n            fullWidth\n            disabled={pendingTx}\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              setPendingTx(false)\n              onDismiss()\n            }}\n          >\n            {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n          </Button>\n        </ModalActions>\n      </ActionWrapper>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from 'kebabfinance-uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-top: 16px;\n  margin-left: -31px;\n  margin-right: -31px;\n  padding-top: 16px;\n  padding-left: 31px;\n  padding-right: 31px;\n`\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n`\nconst Details = styled.div`\n  margin-top: 16px;\n`\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-family: GilroySemiBold;\n  font-size: 16px;\n`\nconst TokenLink = styled.a`\n  font-family: GilroySemiBold;\n  font-size: 16px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.info};\n`\n\nconst CardFooter: React.FC<Props> = ({ projectLink, totalStaked, blocksRemaining, blocksUntilStart, poolCategory }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ArrowDropUpIcon : ArrowDropDownIcon\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon color=\"currentColor\" />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row>\n            <FlexFull>\n              <Label>{TranslateString(408, 'Total:')}</Label>\n            </FlexFull>\n            <Balance fontSize=\"16px\" value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"16px\" value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"16px\" value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, CardBody, useWalletModal } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport CardTokenImg from './CardTokenImg'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst StyledCardBody = styled(CardBody)`\n  width: 100%;\n  padding: 38px 31px 16px 31px;\n`\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 4px;\n  margin-bottom: 4px;\n`\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n`\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\nconst StyledDetails = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst StyledLabel = styled.div<{ isDisabled: boolean }>`\n  font-size: 16px;\n  font-family: GilroySemiBold;\n  color: ${({ isDisabled, theme }) => (isDisabled ? theme.colors.textInactive : 'currentColor')};\n`\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account, connect, reset } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.KETCH\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  let displayedDecimals = 3\n  if (tokenName === 'BTCB') displayedDecimals = 8\n  if (tokenName === 'BNB') displayedDecimals = 8\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      <StyledCardBody>\n        <CardHeader>\n          <CardTitle isFinished={isFinished && sousId !== 0}>\n            {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n          </CardTitle>\n          {account && harvest && !isOldSyrup && (\n            <Button\n              size=\"sm\"\n              disabled={!earnings.toNumber() || pendingTx}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            >\n              {pendingTx ? 'Collecting' : 'Harvest'}\n            </Button>\n          )}\n        </CardHeader>\n        <CardTokenImg src={`/images/tokens/${image || tokenName}.png`} alt={tokenName} />\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance\n              value={getBalanceNumber(earnings, tokenDecimals)}\n              isDisabled={isFinished}\n              decimals={displayedDecimals}\n            />\n            {sousId === 0 && account && harvest && (\n              <Button size=\"sm\" disabled={!earnings.toNumber() || pendingTx} onClick={onPresentCompound}>\n                {pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n              </Button>\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && (\n            <Button fullWidth onClick={onPresentConnectModal}>\n              {TranslateString(292, 'Unlock Wallet')}\n            </Button>\n          )}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                {`Approve ${stakingTokenName}`}\n              </Button>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <StyledLabel isDisabled={isFinished}>{TranslateString(352, 'APY')}:</StyledLabel>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            <StyledLabel isDisabled={isFinished}>-</StyledLabel>\n          ) : (\n            <Balance fontSize=\"16px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <StyledLabel isDisabled={isFinished}>🥙 {TranslateString(384, 'Your Stake')}:</StyledLabel>\n          <Balance fontSize=\"16px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n        <CardFooter\n          projectLink={projectLink}\n          totalStaked={totalStaked}\n          blocksRemaining={blocksRemaining}\n          blocksUntilStart={blocksUntilStart}\n          poolCategory={poolCategory}\n        />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 35px;\n`\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"primary\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\nimport Slider from '@material-ui/core/Slider'\nimport useTheme from 'hooks/useTheme'\n\ninterface Marks {\n  value: number\n  label: string\n}\n\ninterface SliderProps {\n  defaultValue: number\n  marks: Marks[]\n  onSelectValue?: (v: number | number[]) => void\n}\n\nconst CustomSlider = withStyles({\n  root: {\n    height: 4,\n    width: 'calc(100% - 20px)',\n  },\n  thumb: {\n    height: 14,\n    width: 14,\n    backgroundColor: '#fff',\n    border: '2px solid #EB5757',\n    marginTop: -5,\n    marginLeft: 0,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% - 4px)',\n    color: '#D5422A',\n  },\n  track: {\n    height: 4,\n    borderRadius: 2,\n    backgroundColor: '#EB5757',\n  },\n  rail: {\n    height: 4,\n    borderRadius: 2,\n    backgroundColor: '#BFBFBF',\n  },\n  mark: {\n    width: 14,\n    height: 14,\n    borderRadius: '50%',\n    border: '2px solid #BFBFBF',\n    marginTop: -5,\n    backgroundColor: '#FFF',\n    opacity: 1,\n  },\n  markActive: {\n    backgroundColor: '#EB5757',\n    borderColor: '#EB5757',\n  },\n  markLabel: {\n    fontFamily: 'GilroyRegular',\n    fontSize: '16px',\n    fontWeight: 700,\n    marginLeft: 10,\n    textAlign: 'center',\n  },\n})(Slider)\n\nconst SliderWrapper = styled.div`\n  width: 100%;\n  margin: 10px;\n  padding-left: 10px;\n`\nconst StyledSlider = styled(CustomSlider)`\n  & .MuiSlider-markLabel {\n    color: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst RangeSlider: React.FC<SliderProps> = ({ defaultValue, marks, onSelectValue }) => {\n  const { theme } = useTheme()\n\n  return (\n    <SliderWrapper>\n      <StyledSlider\n        value={defaultValue}\n        marks={marks}\n        onChange={(e, v) => onSelectValue(v)}\n        valueLabelDisplay=\"auto\"\n        theme={theme}\n      />\n    </SliderWrapper>\n  )\n}\n\nexport default RangeSlider\n","import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal } from 'kebabfinance-uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport Slider from 'components/Slider'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface BurnModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst marks = [\n  {\n    value: 0,\n    label: '0%',\n  },\n  {\n    value: 25,\n    label: '25%',\n  },\n  {\n    value: 50,\n    label: '50%',\n  },\n  {\n    value: 75,\n    label: '75%',\n  },\n  {\n    value: 100,\n    label: '100%',\n  },\n]\n\nconst ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0px 30px;\n`\n\nconst BurnModal: React.FC<BurnModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (parseFloat(e.currentTarget.value) > parseFloat(fullBalance)) {\n        setVal(fullBalance)\n        setPercent(100)\n      } else {\n        setVal(e.currentTarget.value)\n        setPercent(Math.floor((parseFloat(e.currentTarget.value) / parseFloat(fullBalance)) * 100))\n      }\n    },\n    [setVal, fullBalance, setPercent],\n  )\n\n  const handleSelectPercent = useCallback(\n    (v) => {\n      setPercent(parseInt(v))\n      setVal(((parseInt(v) * parseFloat(fullBalance)) / 100).toString())\n    },\n    [setPercent, setVal, fullBalance],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n    setPercent(100)\n  }, [fullBalance, setVal, setPercent])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Add an Amount for Burning')}`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ActionWrapper>\n        <Slider defaultValue={percent} marks={marks} onSelectValue={handleSelectPercent} />\n        <ModalActions>\n          <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n            {TranslateString(462, 'Cancel')}\n          </Button>\n          <Button\n            fullWidth\n            disabled={pendingTx}\n            onClick={async () => {\n              setPendingTx(true)\n              await onConfirm(val)\n              setPendingTx(false)\n              onDismiss()\n            }}\n          >\n            {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n          </Button>\n        </ModalActions>\n      </ActionWrapper>\n    </Modal>\n  )\n}\n\nexport default BurnModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, BurnIcon, ChevronRightIcon, useModal } from 'kebabfinance-uikit'\n// import { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport useTokenBalance from 'hooks/useTokenBalance'\n// import { useBurnChef } from 'hooks/useContract'\nimport BurnModal from 'components/BurnModal'\nimport BigNumber from 'bignumber.js'\n\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 217px;\n  background-color: #e46149;\n  overflow: visible;\n  margin-top: 60px;\n  margin-bottom: 35px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: space-between;\n    margin-top: 110px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding-left: 60px;\n`\nconst CardImage = styled.img`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n    width: 159px;\n    height: 311px;\n    margin-top: -70px;\n    margin-right: 64px;\n  }\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  color: white;\n`\nconst CardDescription = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: white;\n  margin-top: 16px;\n`\nconst StyledButton = styled(Button)`\n  box-shadow: none;\n  margin-top: 16px;\n  font-size: 14px;\n  width: 120px;\n  background-color: white;\n  color: #e46149;\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n  // const { account }: { account: string } = useWallet()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  // const burnChefContract = useBurnChef()\n  // const onBurn = async (v) => {\n  //   try {\n  //     await burnChefContract.methods.burn(new BigNumber(v).multipliedBy(new BigNumber(10).pow(18)))\n  //       .send({ from: account })\n  //       .on('transactionHash', (tx) => {\n  //         console.info('success', tx)\n  //       })\n  //       .on('error', (err) => {\n  //         console.error(err)\n  //       })\n  //   } catch (err) {\n  //     console.error(err)\n  //   }\n  // }\n\n  const [onPresentBurn] = useModal(\n    <BurnModal\n      max={new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(new BigNumber(10).pow(18))}\n      // onConfirm={onBurn}\n      onConfirm={null}\n      tokenName=\"KEBAB\"\n    />,\n  )\n\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>{TranslateString(282, 'Ketchup?')}</CardTitle>\n        <CardDescription>\n          Stake KEBAB to earn new tokens. You can unstake at any time. Rewards are calculated per block.\n        </CardDescription>\n        {/* <StyledButton\n          variant=\"tertiary\"\n          size=\"sm\"\n          startIcon={<BurnIcon color=\"currentColor\" style={{ width: 15 }} />}\n          endIcon={<ChevronRightIcon color=\"currentColor\" style={{ width: 8 }} />}\n          onClick={onPresentBurn}\n        >\n          Burn\n        </StyledButton> */}\n      </StyledCardBody>\n      <CardImage src=\"/images/ketchup.png\" alt=\"ketchup img\" />\n    </StyledCard>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\n// import useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePoolsUser } from 'state/hooks'\n// import { QuoteToken, PoolCategory } from 'config/constants/types'\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Hero from './components/Hero'\n\nconst Pools = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-gap: 16px;\n  margin-bottom: 100px;\n\n  @media (min-width: 576px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 24px;\n  }\n  @media (min-width: 852px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 40px;\n  }\n  @media (min-width: 968px) {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 40px;\n  }\n  & > div {\n    grid-column: 2 / 8;\n    @media (min-width: 576px) {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst Pool: React.FC = () => {\n  const { path } = useRouteMatch()\n  // const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePoolsUser(account)\n  // const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  // const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n  //   const tokenPriceBN = new BigNumber(tokenPrice)\n  //   if (tokenName === 'BNB') {\n  //     return new BigNumber(1)\n  //   }\n  //   if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n  //     return tokenPriceBN.div(bnbPriceUSD)\n  //   }\n  //   return tokenPriceBN\n  // }\n\n  const poolsWithApy = pools.map((pool) => {\n    // const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    // const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.lpSymbol === 'KEBAB-BUSD LP')\n\n    const stakingTokenPrice = new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    let rewardTokenPrice = stakingTokenPrice\n    if (pool.tokenName === 'BTCB') {\n      rewardTokenPrice = new BigNumber(farms.find((f) => f.tokenSymbol === pool.tokenName).tokenPriceVsQuote)\n    } else if (pool.tokenName === 'BNB') {\n      rewardTokenPrice = new BigNumber(farms.find((f) => f.tokenSymbol === pool.tokenName).tokenPriceVsQuote)\n    }\n\n    const totalRewardPricePerYear = rewardTokenPrice.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPrice.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    // // /!\\ Assume that the farm quote price is BNB\n    // const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    // const rewardTokenPriceInBNB = priceToBnb(\n    //   pool.tokenName,\n    //   rewardTokenFarm?.tokenPriceVsQuote,\n    //   rewardTokenFarm?.quoteTokenSymbol,\n    // )\n\n    // const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    // const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished || !pool.isActive)\n\n  return (\n    <Page>\n      <Container>\n        <Hero />\n        <PoolTabButtons />\n        <Pools>\n          <Route exact path={`${path}`}>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </Route>\n          <Route path={`${path}/history`}>\n            {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </Route>\n        </Pools>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Pool\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from 'kebabfinance-uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { account } = useWallet()\n  const { stakedBalance } = useFarmUser(pid, account)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.png`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\n  const { account } = useWallet()\n  const amountEarned = account ? earnings : null\n\n  const displayBalance = amountEarned || amountEarned === 0 ? amountEarned.toLocaleString() : '?'\n  return <Amount earned={amountEarned}>{displayBalance}</Amount>\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const TranslateString = useI18n()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && TranslateString(658, 'Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\n\nexport interface LPSupplyProps {\n  value: BigNumber\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst LPSupply: React.FC<LPSupplyProps> = ({ value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      {value ? (\n        <>\n          <SupplyWrapper>{new BigNumber(value).dividedBy(new BigNumber(10).pow(18)).toFixed(2)}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default LPSupply\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\n\nexport interface TokenProps {\n  tokenAmount: BigNumber\n  quoteTokenAmount: BigNumber\n  tokenPriceVsQuote: BigNumber\n  quoteTokenSymbol: string\n  tokenSymbol: string\n}\n\nconst Container = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst TokenWrapper = styled.div`\n  display: flex;\n  min-width: 60px;\n  text-align: left;\n  span {\n    margin: 10px;\n  }\n`\n\nconst SymbolWrapper = styled.span`\n  min-width: 120px;\n`\n\nconst Tokens: React.FC<TokenProps> = ({\n  tokenAmount,\n  tokenSymbol,\n  quoteTokenAmount,\n  quoteTokenSymbol,\n  tokenPriceVsQuote,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      {tokenAmount ? (\n        <TokenWrapper>\n          <SymbolWrapper>Token {tokenSymbol}</SymbolWrapper>\n          <span>{new BigNumber(tokenAmount).toFixed(2)}</span>\n        </TokenWrapper>\n      ) : (\n        <TokenWrapper>{TranslateString(656, 'Loading...')}</TokenWrapper>\n      )}\n      {quoteTokenAmount ? (\n        <TokenWrapper>\n          <SymbolWrapper>Quote {quoteTokenSymbol}</SymbolWrapper>\n          <span>{new BigNumber(quoteTokenAmount).toFixed(2)}</span>\n        </TokenWrapper>\n      ) : (\n        <TokenWrapper>{TranslateString(656, 'Loading...')}</TokenWrapper>\n      )}\n      {tokenPriceVsQuote ? (\n        <TokenWrapper>\n          <SymbolWrapper>\n            {tokenSymbol} VS {quoteTokenSymbol}\n          </SymbolWrapper>\n          <span>{new BigNumber(tokenPriceVsQuote).toFixed(6)}</span>\n        </TokenWrapper>\n      ) : (\n        <TokenWrapper>{TranslateString(656, 'Loading...')}</TokenWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default Tokens\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface MyLPProps {\n  symbol: string\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst MyLP: React.FC<MyLPProps> = ({ symbol }) => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { pid } = useFarmFromSymbol(symbol)\n  const { stakedBalance } = useFarmUser(pid, account)\n\n  return (\n    <Container>\n      {symbol ? (\n        <>\n          <SupplyWrapper>{getBalanceNumber(stakedBalance)}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default MyLP\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nexport interface LPPriceProps {\n  value: string\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst LPPrice: React.FC<LPPriceProps> = ({ value }) => {\n  const TranslateString = useI18n()\n  return (\n    <Container>\n      {value ? (\n        <>\n          <SupplyWrapper>{value}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default LPPrice\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { DashboardState, FarmTotal, PoolTotal } from '../types'\n\nconst initialState: DashboardState = { farms: [], pools: [] }\n\nexport const dashboardSlice = createSlice({\n  name: 'Dashboard',\n  initialState,\n  reducers: {\n    setFarmsTotalData: (state, action) => {\n      const farmTotal: FarmTotal = action.payload\n      const index = state.farms.findIndex((f) => f.pid === farmTotal.pid)\n      if (index > -1) state.farms[index] = { ...state.farms[index], value: farmTotal.value }\n      else state.farms.push(farmTotal)\n    },\n    setPoolsTotalData: (state, action) => {\n      const poolTotal: PoolTotal = action.payload\n      const index = state.pools.findIndex((f) => f.symbol === poolTotal.symbol)\n      if (index > -1) state.pools[index] = { ...state.pools[index], value: poolTotal.value }\n      else state.pools.push(poolTotal)\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsTotalData, setPoolsTotalData } = dashboardSlice.actions\n\nexport default dashboardSlice.reducer\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport { getBalanceNumber, getDisplayBalanceUsd } from 'utils/formatBalance'\nimport { setFarmsTotalData } from 'state/dashboard'\nimport BigNumber from 'bignumber.js'\n\nexport interface MyDollarValueProps {\n  symbol: string\n  price: number\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst MyDollarValue: React.FC<MyDollarValueProps> = ({ symbol, price }) => {\n  const dispatch = useDispatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { pid } = useFarmFromSymbol(symbol)\n  const { stakedBalance } = useFarmUser(pid, account)\n  const value = getBalanceNumber(stakedBalance) * price\n  const displayValue = getDisplayBalanceUsd(new BigNumber(value))\n\n  useEffect(() => {\n    dispatch(setFarmsTotalData({ pid, value }))\n  }, [dispatch, pid, value])\n\n  return (\n    <Container>\n      {symbol ? (\n        <>\n          <SupplyWrapper>{displayValue}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default MyDollarValue\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard'\nimport { useMatchBreakpoints, Text } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport { LiquidityProps } from './Liquidity'\nimport LPSupply from './LPSupply'\nimport Tokens from './Tokens'\nimport MyLP from './MyLP'\nimport LPPrice from './LPPrice'\nimport MyDollarValue from './MyDollarValue'\nimport CellLayout from './CellLayout'\n\nexport interface RowProps {\n  farm: FarmProps\n  earned: EarnedProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const { isXs } = useMatchBreakpoints()\n\n  const handleRenderRow = () => {\n    const lpSupply = props.liquidity.liquidity\n      ? Number(props.liquidity.liquidity) /\n        new BigNumber(details.lpSupply).dividedBy(new BigNumber(10).pow(18)).toNumber()\n      : 0\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          <td key=\"farm\">\n            <CellLayout>\n              <Farm {...props.farm} />\n            </CellLayout>\n          </td>\n          <td key=\"earned\">\n            <CellLayout label={TranslateString(1072, 'Earned')}>\n              <Earned {...props.earned} />\n            </CellLayout>\n          </td>\n          <td key=\"lpSymbol\">\n            <CellInner>\n              <CellLayout label={TranslateString(1072, 'My LP')}>\n                <MyLP symbol={details.lpSymbol} />\n              </CellLayout>\n            </CellInner>\n          </td>\n          <td key=\"myDollarValue\">\n            <CellInner>\n              <CellLayout label={TranslateString(1072, 'My Dollar Value')}>\n                <MyDollarValue price={lpSupply} symbol={details.lpSymbol} />\n              </CellLayout>\n            </CellInner>\n          </td>\n          <td key=\"details\">\n            <CellInner>\n              <CellLayout>\n                <Details actionPanelToggled={actionPanelToggled} />\n              </CellLayout>\n            </CellInner>\n          </td>\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  const handleSecondRenderRow = () => {\n    const lpSupply =\n      Number(props.liquidity.liquidity) /\n      new BigNumber(details.lpSupply).dividedBy(new BigNumber(10).pow(18)).toNumber()\n    if (!isXs) {\n      return (\n        <StyledTr>\n          <td key=\"tokenAmount\">\n            <Tokens\n              tokenAmount={details.tokenAmount}\n              quoteTokenAmount={details.quoteTokenAmount}\n              tokenSymbol={details.tokenSymbol}\n              quoteTokenSymbol={details.quoteTokenSymbol}\n              tokenPriceVsQuote={details.tokenPriceVsQuote}\n            />\n          </td>\n          <td key=\"lpSupply\">\n            <CellInner>\n              <CellLayout label={TranslateString(1072, 'LP Supply')}>\n                <LPSupply value={details.lpSupply} />\n              </CellLayout>\n            </CellInner>\n          </td>\n          <td key=\"lpPrice\">\n            <CellInner>\n              <CellLayout label={TranslateString(1072, '1 LP Price')}>\n                <LPPrice value={lpSupply.toFixed(8)} />\n              </CellLayout>\n            </CellInner>\n          </td>\n          <td />\n          <td />\n        </StyledTr>\n      )\n    }\n\n    return (\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{TranslateString(1072, 'LP Supply')}</Text>\n          <LPSupply value={details.lpSupply} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(1072, 'My LP')}</Text>\n          <MyLP symbol={details.lpSymbol} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(1072, '1 LP Price')}</Text>\n          <LPPrice value={lpSupply.toFixed(8)} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{TranslateString(1072, 'My Dollar Value')}</Text>\n          <MyDollarValue price={lpSupply} symbol={details.lpSymbol} />\n        </ValueWrapper>\n      </ValueContainer>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && handleSecondRenderRow()}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, ColumnType } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableHeader = styled.div`\n  padding: 10px 20px;\n  font-weight: bold;\n  font-size: 28.1px;\n  line-height: 34px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableHeader>{TranslateString(674, 'Pairs')}</TableHeader>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Image } from 'kebabfinance-uikit'\n\nexport interface StakeProps {\n  label: string\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Stake: React.FunctionComponent<StakeProps> = ({ image, label }) => {\n  return (\n    <Container>\n      <IconImage src={`/images/tokens/${image}.png`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        <Text bold>{label} Pool</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Stake\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\n\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface StakeBalanceProps {\n  stakedBalance: BigNumber\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst StakeBalance: React.FC<StakeBalanceProps> = ({ stakedBalance }) => {\n  const TranslateString = useI18n()\n  return (\n    <Container>\n      {stakedBalance ? (\n        <>\n          <SupplyWrapper>{getBalanceNumber(stakedBalance).toFixed(0)}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default StakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nexport interface HarvestProps {\n  earned: number\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Harvest: React.FC<HarvestProps> = ({ earned }) => {\n  const TranslateString = useI18n()\n  return earned !== 0 ? (\n    <Container>\n      {earned ? (\n        <>\n          <SupplyWrapper>{earned.toFixed(6)}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <SupplyWrapper>{earned}</SupplyWrapper>\n    </Container>\n  )\n}\n\nexport default Harvest\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { usePriceBusd } from 'state/hooks'\nimport { getDisplayBalanceUsd } from 'utils/formatBalance'\n\nexport interface PriceProps {\n  symbol: string\n  stakedBalance: BigNumber\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Price: React.FC<PriceProps> = ({ symbol, stakedBalance }) => {\n  const TranslateString = useI18n()\n  const price = usePriceBusd(symbol)\n  const value = getDisplayBalanceUsd(price)\n\n  return (\n    <Container>\n      {stakedBalance ? (\n        <>\n          <SupplyWrapper>{value}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default Price\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { usePriceBusd, usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber, getDisplayBalanceUsd } from 'utils/formatBalance'\nimport { setPoolsTotalData } from 'state/dashboard'\n\nexport interface TotalProps {\n  symbol: string\n  stakedBalance: BigNumber\n  earned: number\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Total: React.FC<TotalProps> = ({ symbol, stakedBalance, earned }) => {\n  const dispatch = useDispatch()\n  const TranslateString = useI18n()\n  const price = usePriceBusd(symbol)\n  const kebabPrice = usePriceCakeBusd()\n  const value = getBalanceNumber(stakedBalance.multipliedBy(kebabPrice).plus(price.multipliedBy(new BigNumber(earned))))\n  const displayValue = getDisplayBalanceUsd(new BigNumber(value))\n\n  useEffect(() => {\n    dispatch(setPoolsTotalData({ symbol, value }))\n  }, [dispatch, symbol, value])\n\n  return (\n    <Container>\n      {stakedBalance ? (\n        <>\n          <SupplyWrapper>{displayValue}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  )\n}\n\nexport default Total\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints, Text } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Stake, { StakeProps } from './Stake'\nimport StakeBalance, { StakeBalanceProps } from './StakeBalance'\nimport Harvest, { HarvestProps } from './Harvest'\nimport Price, { PriceProps } from './Price'\nimport Total, { TotalProps } from './Total'\nimport CellLayout from './CellLayout'\nimport { StakingPoolColumnSchema } from '../types'\n\nexport interface StakingRowProps {\n  staking: StakeProps\n  stake: StakeBalanceProps\n  harvest: HarvestProps\n  price: PriceProps\n  total: TotalProps\n}\n\nconst cells = {\n  staking: Stake,\n  stake: StakeBalance,\n  harvest: Harvest,\n  price: Price,\n  total: Total,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst Row: React.FunctionComponent<StakingRowProps> = (props) => {\n  const TranslateString = useI18n()\n\n  const { isXs } = useMatchBreakpoints()\n  const columnNames = StakingPoolColumnSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout\n                        label={TranslateString(\n                          StakingPoolColumnSchema[columnIndex].translationId,\n                          StakingPoolColumnSchema[columnIndex].label,\n                        )}\n                      >\n                        {React.createElement(cells[key], props[key])}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{TranslateString(999, 'Liquidity')}</Text>\n          {/* <Liquidity {...props.liquidity} /> */}\n        </ValueWrapper>\n      </ValueContainer>\n    )\n  }\n\n  return <>{handleRenderRow()}</>\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, ColumnType } from 'kebabfinance-uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { StakingRowProps } from './Row'\n\nexport interface ITableProps {\n  data: StakingRowProps[]\n  columns: ColumnType<StakingRowProps>[]\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableHeader = styled.div`\n  padding: 10px 20px;\n  font-weight: bold;\n  font-size: 28.1px;\n  line-height: 34px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst StakingTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableHeader>{TranslateString(674, 'Staking')}</TableHeader>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default StakingTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { useDashboard } from 'state/hooks'\nimport { getDisplayBalanceUsd } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport { isNumber } from 'lodash'\nimport { Button } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nconst SupplyWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n  font-weight: bold;\n  font-size: 20px;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst GrandTotal: React.FC = () => {\n  const TranslateString = useI18n()\n  const total = getDisplayBalanceUsd(new BigNumber(useDashboard()))\n  const { account }: { account: string } = useWallet()\n  function visitApeBoard(e) {\n    e.preventDefault();\n    let url = 'https://apeboard.finance/dashboard/';\n    url += account\n    window.location.href = url\n  }\n\n  return isNumber(total) ? (\n    <Container>\n      {total ? (\n        <>\n          <SupplyWrapper>Grand Total: {total}</SupplyWrapper>\n        </>\n      ) : (\n        <SupplyWrapper>{TranslateString(656, 'Loading...')}</SupplyWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <SupplyWrapper>Grand Total: {total}</SupplyWrapper>\n      <a href=\"https://swap.kebabfinance.com/#/swap?exactAmount=31.1&exactField=output&inputCurrency=0xe9e7cea3dedca5984780bafc599bd69add087d56&outputCurrency=0x58b8e295fc5b705bcbb48c5978b2b389332e0414\">\n        <ButtonWrapper>\n          <Button size=\"md\" onClick={visitApeBoard}>\n            See on ApeBoard\n          </Button>\n        </ButtonWrapper>\n      </a>\n    </Container>\n  )\n}\n\nexport default GrandTotal\n","import React, { useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { RowType, Card, CardBody } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport styled from 'styled-components'\n\nimport { BLOCKS_PER_YEAR } from 'config'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceCakeBusd, usePoolsUser } from 'state/hooks'\nimport { Farm } from 'state/types'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApy } from 'utils/apy'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport { RowProps } from './components/FarmTable/Row'\nimport { DesktopColumnSchema, StakingPoolColumnSchema } from './components/types'\n\nimport StakingTable from './components/StakingTable/StakingTable'\nimport { StakingRowProps } from './components/StakingTable/Row'\nimport GrandTotal from './components/GrandTotal'\n\nconst Container = styled.div`\n  padding: 10px 40px;\n`\n\nconst Pool = styled.div`\n  padding: 20px 0;\n`\n\nconst Dashboard: React.FC = () => {\n  const { account } = useWallet()\n  const farmsLP = useFarms()\n  const pools = usePoolsUser(account)\n  const cakePrice = usePriceCakeBusd()\n  const block = useBlock()\n\n  const poolsWithApy = pools.map((pool) => {\n    const stakingTokenFarm = farmsLP.find((s) => s.lpSymbol === 'KEBAB-BUSD LP')\n\n    const stakingTokenPrice = new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    let rewardTokenPrice = stakingTokenPrice\n    if (pool.tokenName === 'BTCB') {\n      rewardTokenPrice = new BigNumber(farmsLP.find((f) => f.tokenSymbol === pool.tokenName).tokenPriceVsQuote)\n    } else if (pool.tokenName === 'BNB') {\n      rewardTokenPrice = new BigNumber(farmsLP.find((f) => f.tokenSymbol === pool.tokenName).tokenPriceVsQuote)\n    }\n\n    const totalRewardPricePerYear = rewardTokenPrice.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPrice.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const farmList = farmsLP.filter((farm) => farm.pid !== 0)\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken) {\n          return farm\n        }\n\n        let quoteTokenPriceUsd = new BigNumber(1)\n        if (farm.quoteTokenSymbol === 'BTCB') {\n          quoteTokenPriceUsd = new BigNumber(\n            farmsLP.find((f) => f.tokenSymbol === farm.quoteTokenSymbol).tokenPriceVsQuote,\n          )\n        } else if (farm.quoteTokenSymbol === 'BNB') {\n          quoteTokenPriceUsd = new BigNumber(\n            farmsLP.find((f) => f.tokenSymbol === farm.quoteTokenSymbol).tokenPriceVsQuote,\n          )\n        }\n\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apy = getFarmApy(farm.poolWeight, cakePrice, totalLiquidity)\n\n        return { ...farm, apy, liquidity: totalLiquidity }\n      })\n\n      return farmsToDisplayWithAPY\n    },\n    [cakePrice, farmsLP],\n  )\n\n  const farmsStaked = farmsList(farmList)\n\n  const rowData = farmsStaked.map((farm) => {\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: Number(farm.liquidity),\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const poolList = poolsWithApy.filter((pool) => pool.isActive)\n  const stakingPools = poolList.map((pool) => {\n    const lpSymbol = `${pool.tokenName}-BUSD LP`\n    const row: StakingRowProps = {\n      staking: {\n        image: pool.tokenName,\n        label: pool.tokenName,\n      },\n      stake: {\n        stakedBalance: new BigNumber(pool?.userData?.stakedBalance || 0),\n      },\n      harvest: {\n        earned: getBalanceNumber(new BigNumber(pool?.userData?.pendingReward || 0), pool.tokenDecimals),\n      },\n      price: {\n        symbol: lpSymbol,\n        stakedBalance: new BigNumber(pool?.userData?.stakedBalance || 0),\n      },\n      total: {\n        earned: getBalanceNumber(new BigNumber(pool?.userData?.pendingReward || 0), pool.tokenDecimals),\n        symbol: lpSymbol,\n        stakedBalance: new BigNumber(pool?.userData?.stakedBalance || 0),\n      },\n    }\n\n    return row\n  })\n\n  const renderFarmingPool = (): JSX.Element => {\n    const columnSchema = DesktopColumnSchema\n\n    const columns = columnSchema.map((column) => ({\n      id: column.id,\n      name: column.name,\n      label: column.label,\n      sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n        switch (column.name) {\n          case 'farm':\n            return b.id - a.id\n          case 'earned':\n            return a.original.earned.earnings - b.original.earned.earnings\n          default:\n            return 1\n        }\n      },\n      sortable: column.sortable,\n    }))\n\n    return <Table data={rowData} columns={columns} />\n  }\n\n  const renderStakingPool = (): JSX.Element => {\n    const columnSchema = StakingPoolColumnSchema\n\n    const columns = columnSchema.map((column) => ({\n      id: column.id,\n      name: column.name,\n      label: column.label,\n      sort: () => {\n        switch (column.name) {\n          default:\n            return 1\n        }\n      },\n      sortable: column.sortable,\n    }))\n\n    return <StakingTable data={stakingPools} columns={columns} />\n  }\n\n  return (\n    <Page>\n      <Container>\n        <Card>\n          <CardBody>\n            <GrandTotal />\n          </CardBody>\n        </Card>\n        <Pool>{renderFarmingPool()}</Pool>\n        <Pool>{renderStakingPool()}</Pool>\n      </Container>\n    </Page>\n  )\n}\n\nexport default Dashboard\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APY value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APY is NaN or infinite.\n */\nexport const getPoolApy = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\n}\n\n/**\n * Get farm APY value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApy = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): BigNumber => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apy = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apy.isNaN() || !apy.isFinite() ? null : apy\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Image = styled.img`\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 40px;\n  }\n`\nconst Hero = () => {\n  return <Image src=\"/images/kslv/token.png\" alt=\"kslv token\" />\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 424px;\n  background-color: ${({ theme }) => theme.colors.cardBackground3};\n  margin-top: 45px;\n  box-shadow: none;\n  border-radius: 40px;\n\n  background-image: url('/images/kslv/silver.svg');\n  background-repeat: no-repeat;\n  background-position: center right;\n  background-size: cover;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background-size: contain;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding-left: 40px;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  color: #ff2d55;\n`\nconst Blurb = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: ${({ theme }) => theme.colors.kslvText};\n  margin-top: 6px;\n  width: 300px;\n  line-height: 25px;\n`\n\nconst BackedCard = () => {\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Backed 1:1</CardTitle>\n        <Blurb>\n          Our silver token is backed by a physical silver reserve in our secure vault. Owning KSLV would be as good as\n          owning the underlying silver asset. Why stake USDT and other stable coins when you can do the same with a\n          fully-backed tokenized appreciating asset. You can <a href=\"https://docs.kebabfinance.com/kebab-documentation/silver/why\">swap interchangeably</a> between crypto and physical bullion at any time.\n        </Blurb>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default BackedCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from 'kebabfinance-uikit'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  background-color: #000000;\n  box-shadow: none;\n  height: 423px;\n  border-radius: 40px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 370px;\n  }\n`\nconst Image = styled.img`\n  width: 100%;\n`\n\nconst CompCard = () => {\n  return (\n    <StyledCard>\n      <Image src=\"/images/kslv/comp.png\" alt=\"comp\" />\n    </StyledCard>\n  )\n}\n\nexport default CompCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.cardBackground3};\n  box-shadow: none;\n  height: 423px;\n  margin: auto;\n  border-radius: 40px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 370px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding: 40px;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  font-weight: 700;\n  color: #af52de;\n`\nconst Blurb = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  line-height: 25px;\n  color: ${({ theme }) => theme.colors.kslvText};\n  margin-top: 6px;\n`\n\nconst DefiCard = () => {\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Sound Tokens</CardTitle>\n        <Blurb>\n          Imagine a world where the adoption and demand for metal backed tokens outpaces that of stable coins. Where\n          DeFi users are staking digital silver instead of USDT or BUSD. That is the long term goal of our team for this\n          project.\n        </Blurb>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default DefiCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.cardBackground3};\n  box-shadow: none;\n  height: 423px;\n  margin: auto;\n  border-radius: 40px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 370px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding: 40px;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  font-weight: 700;\n  color: #34c759;\n`\nconst Blurb = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  line-height: 25px;\n  color: ${({ theme }) => theme.colors.kslvText};\n  margin-top: 6px;\n`\n\nconst FeeCard = () => {\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Storage Fees</CardTitle>\n        <Blurb>\n          Our metal tokens would decay in real-time to account for <a href=\"https://docs.kebabfinance.com/kebab-documentation/silver/why/storage-fees\">the costs of moving and storing</a> all our physical\n          metals. For KSLV this will be at a rate of 0.005479151% daily, or about 2% yearly. This rate of decay would\n          differ for various types of metals as the cost for the storage of different metals also varies in price.\n        </Blurb>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default FeeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  background-color: #252836;\n  box-shadow: none;\n  height: 423px;\n  margin: auto;\n  border-radius: 40px;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 370px;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding: 40px 24px;\n  width: 100%;\n  height: 100%;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 32px;\n  text-align: center;\n  color: #34c759;\n`\nconst data = [\n  { name: 'Y0', uv: 10000 },\n  { name: 'Y1', uv: 9800 },\n  { name: 'Y2', uv: 9604 },\n  { name: 'Y3', uv: 9412 },\n  { name: 'Y4', uv: 9224 },\n  { name: 'Y5', uv: 9039 },\n  { name: 'Y6', uv: 8858 },\n  { name: 'Y7', uv: 8681 },\n  { name: 'Y8', uv: 8508 },\n  { name: 'Y9', uv: 8337 },\n  { name: 'Y10', uv: 8171 },\n  { name: 'Y11', uv: 8007 },\n  { name: 'Y12', uv: 7847 },\n  { name: 'Y13', uv: 7690 },\n  { name: 'Y14', uv: 7536 },\n  { name: 'Y15', uv: 7386 },\n  { name: 'Y16', uv: 7238 },\n  { name: 'Y17', uv: 7093 },\n  { name: 'Y18', uv: 6951 },\n  { name: 'Y19', uv: 6812 },\n  { name: 'Y20', uv: 6676 },\n  { name: 'Y21', uv: 6543 },\n  { name: 'Y22', uv: 6412 },\n  { name: 'Y23', uv: 6283 },\n  { name: 'Y24', uv: 6158 },\n  { name: 'Y25', uv: 6035 },\n  { name: 'Y26', uv: 5914 },\n  { name: 'Y27', uv: 5796 },\n  { name: 'Y28', uv: 5680 },\n  { name: 'Y29', uv: 5566 },\n  { name: 'Y30', uv: 5455 },\n  { name: 'Y31', uv: 5346 },\n  { name: 'Y32', uv: 5239 },\n  { name: 'Y33', uv: 5134 },\n  { name: 'Y34', uv: 5031 },\n  { name: 'Y35', uv: 4931 },\n  { name: 'Y36', uv: 4832 },\n  { name: 'Y37', uv: 4735 },\n  { name: 'Y38', uv: 4641 },\n  { name: 'Y39', uv: 4548 },\n  { name: 'Y40', uv: 4457 },\n  { name: 'Y41', uv: 4368 },\n  { name: 'Y42', uv: 4281 },\n  { name: 'Y43', uv: 4195 },\n  { name: 'Y44', uv: 4111 },\n  { name: 'Y45', uv: 4029 },\n  { name: 'Y46', uv: 3948 },\n  { name: 'Y47', uv: 3869 },\n  { name: 'Y48', uv: 3792 },\n  { name: 'Y49', uv: 3716 },\n  { name: 'Y50', uv: 3642 }\n]\n\n\nconst FeeCard = () => {\n  const DataFormater = (number) => {\n    if (number === 0) {\n      return ''\n    }\n    return (number/100).toString()\n  }\n\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Amount/Year</CardTitle>\n        <ResponsiveContainer height={320}>\n          <AreaChart\n            data={data}\n            margin={{\n              top: 20,\n              right: 10,\n              left: -30,\n              bottom: 0,\n            }}\n          >\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#32D74B\" stopOpacity={0.8} />\n                <stop offset=\"95%\" stopColor=\"#32D74B\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"name\" axisLine={false} tickLine={false} tick={{ stroke: '#F5F5F7', fontSize: 12 }} />\n            <YAxis\n              type=\"number\"\n              domain={[0, 400]}\n              tickFormatter={DataFormater}\n              tickCount={5}\n              tick={{ stroke: '#F5F5F7', fontSize: 12 }}\n              axisLine={false}\n              tickLine={false}\n            />\n            <Area\n              type=\"basis\"\n              dataKey=\"uv\"\n              stroke=\"#32D74B\"\n              fillOpacity={1}\n              fill=\"url(#colorUv)\"\n              strokeWidth={2}\n              connectNulls\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default FeeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from 'kebabfinance-uikit'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 424px;\n  background-color: ${({ theme }) => theme.colors.cardBackground3};\n  margin-top: 25px;\n  box-shadow: none;\n  border-radius: 40px;\n  margin-bottom: 150px;\n\n  background-image: url('/images/kslv/access.png');\n  background-repeat: no-repeat;\n  background-position: center left;\n  background-size: cover;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background-size: contain;\n  }\n`\nconst StyledCardBody = styled(CardBody)`\n  padding-right: 40px;\n  padding-left: 40px;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 48px;\n  color: #007aff;\n`\nconst Blurb = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: ${({ theme }) => theme.colors.kslvText};\n  margin-top: 6px;\n  width: 320px;\n  line-height: 25px;\n`\n\nconst AccessCard = () => {\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Accessibility</CardTitle>\n        <Blurb>\n          Built as a BEP-20 token on the Binance Smart Chain, you can move and trade KSLV within the BSC ecosystem with\n          ease and negligible fees. Our long term goal would be to make our metal tokens widely accepted by most DeFi\n          protocols so that staking and yielding with KSLV or KGLD would be just as easy as staking and gaining interest\n          on your USDT or BUSD.\n        </Blurb>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default AccessCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, ArrowForwardIcon } from 'kebabfinance-uikit'\nimport { usePriceSilver } from '../../../state/hooks'\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  height: 182px;\n  background-color: rgba(0, 0, 0, 0.7);\n  margin-top: 25px;\n  box-shadow: none;\n  border-radius: 40px;\n\n  background-image: url('/images/kslv/silver.png');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  padding: 12px;\n`\nconst CardTitle = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 32px;\n  color: #f5f5f7;\n`\nconst Value = styled.div`\n  text-align: left;\n`\nconst Price = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 32px;\n  color: #f5f5f7;\n`\nconst Blurb = styled(Heading).attrs({ size: 'lg' })`\n  font-size: 16px;\n  color: #f5f5f7;\n  margin-top: 5px;\n`\nconst StyledButton = styled(Button)`\n  border: 2px solid #f5f5f7;\n  border-radius: 30px;\n  color: #f5f5f7;\n`\n\nconst SilverCard = () => {\n  const silverPriceGram = usePriceSilver().toNumber().toFixed(3)\n  const silverPriceOz = (31.1035 * (usePriceSilver().toNumber())).toFixed(2)\n  return (\n    <StyledCard>\n      <StyledCardBody>\n        <CardTitle>Silver</CardTitle>\n        <Value>\n          <Price>${silverPriceGram}</Price>\n          <Blurb>1 gram</Blurb>\n        </Value>\n        <Value>\n          <Price>${silverPriceOz}</Price>\n          <Blurb>1 troy oz</Blurb>\n        </Value>\n        <a href=\"https://swap.kebabfinance.com/#/swap?exactAmount=31.1&exactField=output&inputCurrency=0xe9e7cea3dedca5984780bafc599bd69add087d56&outputCurrency=0x58b8e295fc5b705bcbb48c5978b2b389332e0414\">\n          <StyledButton variant=\"secondary\" size=\"sm\" endIcon={<ArrowForwardIcon color=\"currentColor\" />}>\n            Trade Silver\n          </StyledButton>\n        </a>\n      </StyledCardBody>\n    </StyledCard>\n  )\n}\n\nexport default SilverCard\n","import React from 'react'\nimport { Heading } from 'kebabfinance-uikit'\nimport styled from 'styled-components'\n\nimport Page from 'components/layout/Page'\nimport Container from 'components/layout/Container'\nimport Hero from './components/Hero'\nimport BackedCard from './components/BackedCard'\nimport CompCard from './components/CompCard'\nimport DefiCard from './components/DefiCard'\nimport FeeCard from './components/FeeCard'\nimport GraphCard from './components/GraphCard'\nimport AccessCard from './components/AccessCard'\nimport GoldCard from './components/GoldCard'\nimport SilverCard from './components/SilverCard'\n\nconst Title = styled(Heading)`\n  font-family: 'GilroyMedium';\n  font-size: 64px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.kslvText};\n  margin-top: -20px;\n  text-align: center;\n`\nconst DefiCardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 16px;\n  margin-top: 50px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`\nconst FeeCardWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-gap: 16px;\n  margin-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`\n\nconst KSLV = () => {\n  return (\n    <Page>\n      <Container>\n        <Hero />\n        <Title as=\"h1\">Kebab Metals</Title>\n        <SilverCard />\n        <BackedCard />\n        <DefiCardWrapper>\n          <CompCard />\n          <DefiCard />\n        </DefiCardWrapper>\n        <FeeCardWrapper>\n          <FeeCard />\n          <GraphCard />\n        </FeeCardWrapper>\n        <AccessCard />\n        {/* <GoldCard /> */}\n        {/* <SilverCard /> */}\n      </Container>\n    </Page>\n  )\n}\n\nexport default KSLV\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Text, LogoIcon } from 'kebabfinance-uikit'\nimport Page from 'components/layout/Page'\nimport useI18n from 'hooks/useI18n'\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 152px);\n  justify-content: center;\n`\n\nconst NotFound = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Heading size=\"xxl\">404</Heading>\n        <Text mb=\"16px\">{TranslateString(999, 'Oops, page not found.')}</Text>\n        <Button as=\"a\" href=\"/\" size=\"sm\">\n          {TranslateString(999, 'Back Home')}\n        </Button>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NotFound\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\n// import { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\nimport axios from 'axios'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\n// const fileId = 8\n// const projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\n// const stringTranslationsApi = new StringTranslations({\n//   token: process.env.REACT_APP_CROWDIN_APIKEY,\n// })\n\n// const fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n//   return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n// }\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      axios\n        .get(`./lang/${selectedLanguage.code}.json`)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import { MenuEntry } from 'kebabfinance-uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n    color: '#E46149',\n    backgroundColor: '#FADFDB',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://swap.kebabfinance.com/#/swap',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://swap.kebabfinance.com/#/pool',\n      },\n    ],\n    color: '#197BBD',\n    backgroundColor: '#D1E5F2',\n  },\n  {\n    label: 'Farming',\n    icon: 'FarmIcon',\n    href: '/farms',\n    color: '#11A373',\n    backgroundColor: '#CFEDE3',\n  },\n  {\n    label: 'Staking',\n    icon: 'PoolIcon',\n    href: '/pools',\n    color: '#F7931A',\n    backgroundColor: '#FDE9D1',\n  },\n  {\n    label: 'Metals',\n    icon: 'KSLVIcon',\n    href: '/metals',\n    color: '#e8c99b',\n    backgroundColor: '#fff',\n  },\n  {\n    label: 'IFO',\n    icon: 'IfoIcon',\n    href: '/ifo',\n    color: '#404040',\n    backgroundColor: '#D9D9D9',\n  },\n  {\n    label: 'Dashboard',\n    icon: 'DashboardIcon',\n    href: '/dashboard',\n    color: '#7A23BE',\n    backgroundColor: '#E4D3F2',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://info.kebabfinance.com',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://info.kebabfinance.com/#/tokens',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://info.kebabfinance.com/#/pairs',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://info.kebabfinance.com/#/accounts',\n      },\n    ],\n    color: '#BC1FAA',\n    backgroundColor: '#F2D2EE',\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Documentation',\n        href: 'https://docs.kebabfinance.com',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/chefkebab',\n      },\n      {\n        label: 'Blog',\n        href: 'https://kebabfinance.medium.com',\n      },\n    ],\n    color: '#DCAB2F',\n    backgroundColor: '#F8EED5',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from 'kebabfinance-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  if (!sessionStorage.lastprice) sessionStorage.lastprice = cakePriceUsd.toNumber().toString()\n  if (sessionStorage.lastprice !== cakePriceUsd.toNumber().toString()) {\n    setTimeout(() => {\n      sessionStorage.lastprice = cakePriceUsd.toNumber().toString()\n    }, 1500)\n  }\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      priceUp={Number(sessionStorage.lastprice) < cakePriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from 'kebabfinance-uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'GilroyRegular';\n    src: url(/fonts/Gilroy-Regular.ttf);\n  }\n  @font-face {\n    font-family: 'GilroyMedium';\n    src: url(/fonts/Gilroy-Medium.ttf);\n  }\n  @font-face {\n    font-family: 'GilroySemiBold';\n    src: url(/fonts/Gilroy-SemiBold.ttf);\n  }\n  * {\n    font-family: 'GilroyRegular', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React, { useEffect } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from 'kebabfinance-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useGetFarmsList, useGetPoolsList, useFetchPriceList, useFetchPublicData } from 'state/hooks'\nimport Ifos from 'views/Ifos'\nimport Farms from './views/Farms'\nimport Farm from './views/Farm'\nimport Home from './views/Home'\nimport Pools from './views/Pools'\nimport Dashboard from './views/Dashboard'\nimport KSLV from './views/KSLV'\nimport NotFound from './views/NotFound'\nimport Menu from './components/Menu'\nimport GlobalStyle from './style/Global'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useGetFarmsList()\n  useGetPoolsList()\n  useFetchPublicData()\n  useFetchPriceList()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/farms\">\n            <Farms />\n          </Route>\n          <Route path=\"/farm/:lpSymbol\">\n            <Farm />\n          </Route>\n          <Route path=\"/pools\">\n            <Pools />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/ifo\">\n            <Ifos />\n          </Route>\n          <Route path=\"/metals\">\n            <KSLV />\n          </Route>\n          {/* 404 */}\n          <Route component={NotFound} />\n        </Switch>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport dashboardReducer from './dashboard'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    dashboard: dashboardReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from 'kebabfinance-uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}